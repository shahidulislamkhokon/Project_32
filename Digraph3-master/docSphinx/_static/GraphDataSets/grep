<html>$
<head>$
<title>Ruby Data set</title>$
<STYLE>$
<!--$
		TD { text-align: right }$
-->$
</STYLE>$
</head>$
<body>$
<h1>Ruby Data sets</h1>$
<h2>Title</h2>$
<p>Berge's suggestion for hyperkernels</p>$
<h2>Data type</h2>$
{-1,1}-valued digraph$
<h2>Problematics</h2>$
<p>Absorbent kernels, Grundy functions, hyperkernel approach</p>$
<h2>Description</h2>$
<p><i>X</i> = {1,2,3,4,5,6,7}, <i>L</i> = {0,100}</p>$
<p><i>S</i> = {(1,2), (2,3), (3,1), (1,4), (2,5), (3,6), (4,7), (5,7),$
(6,7)}</p>$
<p><img src="berge54.png"></p>$
<p>The example is used by Cl. Berge for illustrating the case of a Nim game for which neither a Grundy function nor a kernel exists. This is due to the presence of the initial tricycle$
{1,2,3}.</p>$
$
<p>The tricycle {1,2,3} gives nevertheless the actual solution of the game. Similarly, the corresponding hyperkernel { _1_2_3_, 7} gives a potential good choice.</p>$
$
<H2>Files</H2>$
<ul>$
<li><a href="berge54.py">Python file</a>$
<li><a href="berge54.pl">Gnu-Prolog file</a>$
<li><a href="berge54h1.py">Hypergraph, Python file</a>$
</ul$
$
<h2>References</h2>$
<p>Cl. Berge,  The Theory of Graphs, (Original in French, Th&eacute;orie des graphes et ses applications. Dunod, Paris, 1958). Reprint of the English translation 1962, Dower, 2001, p. 54</p>$
$
<h2>Ruby Data Sets</h2>$
<p><a href="http://www.cu.lu/~bisdorff/RubyDataSets/index.html">All Ruby data sets.</a>$
</body>$
<html>$
<head>$
<meta name="description" content="Entry level to the RuBy decision support methodology pages">$
<meta name="author" content="Raymond Bisdorff">$
<meta name="keywords" content="University, Decision-Aid, RuBy decision support methodology, Operational Research, Graph Theory, Random Graphs, Graph Automorphism, Kernels, Bipolar Valued Logic">$
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">$
<meta http-equiv="Content-Style-Type" content="text/css">$
<title>Ruby Data set: Denis Bouyssou's example from October 11 2005</title>$
<STYLE type="text/css">$
  BODY       { font-family:Verdana }$
  H1         { font-size:16pt; color:#339966 }$
  H2         { font-size:14pt; color:#AD2B2E }$
  P          { font-size:10pt }$
  P.tty { font-family:courier }$
  B.tty { font-family:courier }$
  B.sc  { font-variant:small-caps }$
  p.quote {margin-left:15px; }  $
</STYLE>$
</head>$
<body>$
<h1>Ruby Data set</h1>$
<h2>Denis Bouyssou's example from October 11 2005</h2>$
<h3>Data type</h3>$
<p>Didactical digraph</p>$
<h3>Problematics</h3>$
<p>Best unique choice problematics, the stability principle in question</p>$
<h3>Description</h3>$
<p>We consider the outranking graph <em>G</em>(<em>A</em>,<em>S</em>), where <em>A</em> = { <em>a</em>,<em>b</em>,<em>c</em>,<em>d</em> } is a set of four decision actions supporting the outranking relation <em>S</em> = { <em>a</em> S <em>b</em>, <em>a</em> S <em>c</em>, <em>b</em> S <em>c</em>, <em>b</em> S <em>d</em>, <em>c</em> S <em>d</em> }.</p>$
<p><img src="bouyssou11Oct05.png"></p>$
<p>The outranking graph <em>G</em>(<em>A</em>,<em>S</em>) supports three minimal outranking choices: {<em>a</em>,<em>b</em>}, {<em>a</em>, <em>c</em>}, and {<em>a</em>,<em>d</em>}. The first and second choice are not independent and not outranked, whereas the last one is a null kernel, i.e. an independent and conjointly outranking and outranked choice. Following our RUBY methodology, the graph in question does not support any reasonnable best choice recommendation. Indeed, the lack of transitivity of the outranking relation between <em>a</em> and <em>d</em> suggests that three circular geometrical dispositions of the given outranking graph are equally plausible (see figure below). The first suggests that <em>a</em> and <em>b</em> might be considered equivalent, the second that <em>a</em> and <em>c</em> might also be considered equivalent and the last suggests that <em>a</em> and <em>d</em> might again be considered equivalent. So all four actions appear potentially to be equivalent and the given outranking graph does in fact not support any convincing best choice recommendation.</p>$
<p><img src="bouyssou11Oct05circ.png"></p>$
<p>However, among the three minimal outranking choices, {<em>a</em>,<em>b</em>} shows the strongest outranking irredundancy with two non empty private outranked open neighbourhoods: {<em>c</em>} for <em>a</em>, and {<em>c</em>,<em>d</em>} for <em>b</em>. The choice {<em>a</em>,<em>c</em>} also supports two non empty private outranked open neighbourhoods: {<em>b</em>} for <em>a</em> and {<em>d</em>} for <em>c</em>, but of smaller cardinality. Whereas the kernel {<em>a</em>,<em>d</em>} shows the weakest outranking irredundancy with a single non empty private outranked open neighbourhood: {<em>b</em>,<em>c</em>} for <em>a</em>.</p>$
<p> If the instability of the best choice recommendation is not considered a problem then the choice {<em>a</em>,<em>b</em>} shows the most convincing strict outranking quality and could be considered in priority for recommendation as unique best choice candidates as suggested below by Denis Bouyssou:</p>$
<p class="quote">&laquo; &nbsp;... le noyau classique renvoie {<em>a</em>, <em>d</em>}. le choix de <em>d</em> ne me semble pas convaincant car il y a dans le graphe un sommet qui &agrave; tous &eacute;gards est meilleur que <em>d</em> : le somment <em>b</em>. L'argument faisant valoir que la lev&eacute;e de l'incomparabilit&eacute; entre <em>a</em> et <em>d</em> pourrait jouer en faveur de <em>d</em> est int&eacute;ressant mais je ne comprends pas pourquoi, a priori, on privil&eacute;gierai une telle hypoth&egrave;se. Une autre hypoth&egrave;se pourrait &ecirc;tre que en fait <em>b</em> <em>S</em> <em>a</em>. Dans ce cas il me semble clair que le choix devrait se reduire &agrave; <em>b</em>. A moins d'avoir d'autres informations &agrave; disposition (un tableau de performances ou la m&eacute;thode utilis&eacute;e pour b&acirc;tir <em>S</em>), je ne comprends pas pourquoi la premi&egrave;re hypoth&egrave;se est priviligi&eacute;e. Par exemple si <em>d</em> est une action "bizarre", l'action <em>b</em> pourrait &ecirc;tre &agrave; mi-chemin entre <em>a</em> et <em>d</em> et le fait que <em>b</em> <em>S</em> <em>d</em> laisse croire qu'aller plus loin dans cette direction n'est pas souhaitable (&Agrave; ce propos, il me semblerait int&eacute;ressant d'&eacute;tudier des m&eacute;canismes qui sont coh&eacute;rents avec la s&eacute;mantique de la relation de surclassement. Un arc absent ne signifie pas qu'il n'existe pas mais que l'on n'a pas pu l'&eacute;tablir avec probance). En tout &eacute;tat de cause, il faut &ecirc;tre tr&egrave;s clair sur l'information dont on dispose pour juger d'une proc&eacute;dure de choix. Si la <b>seule</b> information est la relation <em>S</em> (sans autre pr&eacute;cision sur sa nature), je persiste &agrave; croire que <em>b</em> devrait &ecirc;tre dans le choix.&nbsp;&raquo; <em>D. Bouyssou, private communication, 14 octobre 2005.</em> </p>$
<p>Quid of the stability principle ?</p>$
<H3>Files</H3>$
<ul>$
<li><a href="bouyssou11Oct05crisp.py">Python file</a>$
</ul>$
<h3>References</h3>$
<ul>$
<li>R. Bisdorff, <em>Exloitation en probl&eacute;matique du choix d'une relation de surclassement valu&eacute;e</em>. Communication au S&eacute;minaire du Lamsade, 11 octobre 2005. <a href="lamsadeHandouts.pdf">(PDF for dowloading)</a>.$
</ul>$
<hr>$
<p><a href="index.html">Return to main <b class="sc">RuBy</b> index</a></p>$
<p>Responsible author: <a href="mailto://raymond.bisdorff@uni.lu">R. Bisdorff</a>, Decembre 2005</p>$
</body>$
</html>$
<html>$
<head>$
<meta name="description" content="Entry level to the RuBy decision support methodology pages">$
<meta name="author" content="Raymond Bisdorff">$
<meta name="keywords" content="Digraph3, University, Decision-Aid, RuBy decision support methodology, Operational Research, Graph Theory, Random Graphs, Graph Automorphism, Kernels, Bipolar Valued Logic">$
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">$
<meta http-equiv="Content-Style-Type" content="text/css">$
<STYLE type="text/css">$
  BODY       { font-family:Verdana }$
  H1         { font-size:16pt; color:#339966 }$
  H2         { font-size:14pt; color:#AD2B2E }$
  P          { font-size:10pt }$
  P.tty { font-family:courier }$
  B.tty { font-family:courier }$
</STYLE>$
<title>Ruby Data set: The Chv&aacute;tal Graph</title>$
</head>$
<body>$
<h1>Ruby Data set</h1>$
<h2>The Chv&aacute;tal Graph</h2>$
<h3>Data type</h3>$
<p>Crisp symmetric simple graphs</p>$
<h3>Problematics</h3>$
<p>Symmetric graphs, graph automorphism, unlabelled kernels, St-Nicolas graphs</p>$
<h3>Description</h3>$
<p>Gr&uuml;nbaum conjectured that for every <i>m>1</i>, <i>n</i>>2, there exists an <i>m</i>-regular, <i>m</i>-chromatic graph of girth at least <i>n</i>. This result is trivial for <i>n</i>=2 and <i>m</i>=2,3, but only two other such graphs are known: the Chv&aacute;tal graph illustrated below, and the Gr&uuml;nbaum graph.</p>$
<img src="chvatal.png" />$
$
<p>The Chv&aacute;tal graph is a quartic Hamiltonian graph on 12 nodes and 24 edges. It has chromatic number 4, and girth 4 and unlabelled kernel number <b>3</b>.$
<h3>Proof</h3>$
<p>Indeed, Chv&aacute;tal's graph supports an automorphisms group with two generating reflections, shown below, delivering two orbits of isomorphic labelled graphs.</p>$
<img src="Chvatal12-4Sym-1.png" />$
<img src="Chvatal12-4Sym-2.png" />$
$
<p>The autumorhism group delivers3 kernel orbits of respectively 2 x 8 and 4 isomorph labelled kernels.</p>$
<img src="chvatal-3.png" />$
$
<p>It is worthwhile noticing that the Chv&aacute;tal graph contains a <font color="red"><a href="Classif04Handouts.pdf">St-Nicolas subgraph</a></font> of order 8, induced by the two exterior rectangles: vertices 1,2,3,4, and vertices 7,8,9,10. More precisely, this St-Nicolas graph is in fact the Andr&aacute;sfai graph of order 3, i.e. the M&ouml;bius ladder of order 4.</p>$
<img src="and-3.png" />$
<p>The only known St-Nicolas graphs of order 12 are the clique K12 and the circulant graph {<b>Z</b>_12, [1,4,6]}.</p>$
$
<H3>Files</H3>$
<ul>$
<li><a href="chvatal12-4.py">Python file</a>$
</ul>$
<h3>References</h3>$
<ul>$
<li><a href="http://mathworld.wolfram.com/ChvatalGraph.html">http://mathworld.wolfram.com/ChvatalGraph.html</a>$
<li>R. Bisdorff, <a href="Classif04Handouts.pdf">St-Niclas graphs</a>, Communication, 4th Workshop on Classification, Luxembourg, December 2005</li>$
</ul>$
<hr>$
<p><a href="index.html">Return to <b class="sc">Content table</b></a></p>$
<p>Responsible author: <a href="mailto://raymond.bisdorff@uni.lu">R. Bisdorff</a>, Decembre 2005</p>$
</body>$
</html>$
<html>$
<head>$
<meta name="description" content="Entry level to the RuBy decision support methodology pages">$
<meta name="author" content="Raymond Bisdorff">$
<meta name="keywords" content="University, Decision-Aid, RuBy decision support methodology, Operational Research, Graph Theory, Random Graphs, Graph Automorphism, Kernels, Bipolar Valued Logic">$
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">$
<meta http-equiv="Content-Style-Type" content="text/css">$
<title>Ruby Data set: The Coxeter graph</title>$
<STYLE type="text/css">$
  BODY       { font-family:Verdana }$
  H1         { font-size:16pt; color:#339966 }$
  H2         { font-size:14pt; color:#AD2B2E }$
  P          { font-size:10pt }$
  P.tty { font-family:courier }$
  B.tty { font-family:courier }$
  B.sc  { font-variant:small-caps }$
</STYLE>$
$
</head>$
<body>$
<h1>Ruby Data set</h1>$
<h2>The Coxeter graph</h2>$
<h3>Data type</h3>$
<p>Arc-transitive (symmetric) graph</p>$
<h3>Problematics</h3>$
<p>Kernel equation system solution space symmetries, conjecture on kernel numbers, clustering</p>$
<h3>Description</h3>$
$
<p>The Coxeter graph is a famous 28-vertex cubic graph with girth seven. It is constructed from X = {1,2,3,4,5,6,7} and its circulants {-1,1}, {-2,2} and {-3,3}.</p>$
<img src="coxeter.png">$
$
<p>The Coxeter graph is in fact a remarquable subgraph of the Kneser graph J(7,3,0) of order 35, hence its natural similarity with the <a href="Petersen.html">Petersen graph</a> who is the corresponding J(5,2,0) graph. These kinds of graph appear when taking the dual of a similarity relation, a situation we naturally have to tackle in clustering problems.</p>$
$
<p>The Coxeter graph supports 1562 different kernels, among them obviously the minimal set of 0-circulant (pink coloured) nodes of cardinality 7.</p> $
$
<p>W should find anough symmetry in the Coxeter graph such that the symmetry congruence classes induced on the kernel equation system solution space is less or equal 28, i.e. the order of the graph.</p>$
$
<p>Indeed, the unlabelled kernel number of the Coxeter graph is <b>13.</b></p>$
<h3>Proof</h3>$
<p>The <a href="http://cs.anu.edu.au/~bdm/nauty/">nauty</a> program, a software package for computing the automorhism group of a graph, reveals us that the Coxeter graph supports four automorphic actions: three bilateral symmteric foldings with each time four fixed nodes, and an obvious 7 steps central rotational symmetry k_i to (k+j)_i, with k,j in Z7 and i = 0 (circulant {-1,1}), 1 (circulent {0,0}), 2 (circulent {-2,2}), and 3 (circulent {-3,3}). The total order of the automorphism group generated with these actions is 336.</p>$
<p>In the figure below we illustrate one the three bilateral foldings where the nodes are enumerated continuously from 1 to 28 in increasing order of the four circulants {-1,1}: 1-7, {0,0}: 8-14, {-2,2}: 15-20 and {-3,3}: 21-28.</p>$
<img src="coxeterlateral3.png" width="700">$
<p>The four generators of the Coxeter automorphism group map on the kernel equation system solution space 13 disjoint orbits with the following representatively labelled choices, in increasing cardinalities of the choice and the corresponding orbit:$
<table>$
<tr><th>#<th>Choice<th>Choice cardinality<th>Orbit cardinality$
<tr><td>1<td>['3_0', '5_0', '6_0', '1_0', '2_0', '4_0', '7_0']<td> 7 <td>8$
<tr><td>2<td>['3_2', '6_3', '2_1', '5_3', '5_1', '1_0', '4_2', '4_3', '7_0']<td> 9<td> 56$
<tr><td>3<td>['3_3', '3_2', '6_2', '2_1', '2_3', '5_1', '1_3', '4_0', '7_1', '7_2']<td>  10<td>28$
<tr><td>4<td>['3_3', '6_0', '2_1', '5_3', '5_2', '1_0', '4_2', '4_3', '4_1', '7_0']<td>  10<td> 56$
<tr><td>5<td>['3_1', '3_2', '6_0', '2_0', '5_0', '1_3', '1_1', '4_0', '7_3', '7_2']<td>  10<td> 56$
<tr><td>6<td>['3_0', '6_0', '2_1', '2_3', '5_2', '1_2', '4_2', '4_3', '4_1', '7_1']<td>  10<td> 84$
<tr><td>7<td>['3_0', '6_3', '2_0', '5_3', '5_1', '1_2', '4_2', '7_1', '7_3', '7_2']<td>  10<td> 84$
<tr><td>8<td>['3_3', '6_0', '2_1', '5_3', '5_2', '1_2', '4_2', '4_3', '4_1', '7_1']<td>  10<td> 168$
<tr><td>9<td>['3_0', '6_0', '2_1', '2_2', '5_3', '5_2', '5_1', '1_2', '4_0', '7_0']<td>  10<td> 168$
<tr><td>10<td>['3_3', '3_2', '6_0', '2_1', '2_3', '5_1', '1_0', '4_2', '4_3', '7_0']<td>  10<td> 336$
<tr><td>11<td>['3_0', '6_0', '2_0', '5_2', '5_1', '1_3', '1_2', '1_1', '4_0', '7_3']<td>  10<td> 336$
<tr><td>12<td>['3_1', '3_2', '6_1', '6_2', '6_3', '2_0', '5_3', '1_0', '4_0', '7_3', '7_2']<td>  11<td> 168$
<tr><td>13<td>['3_1', '3_3', '6_0', '2_2', '2_3', '5_2', '5_1', '1_3', '1_2', '1_1', '4_0', '7_0']<td>  12<td> 14$
</table>$
$
<H3>Files</H3>$
<ul>$
<li><a href="coxeter.py">The Coxeter graph (Python file format)</a>$
<li><a href="coxeter.txt">All 1562 kernel solutions of the Coxeter graph (Text file format)</a>$
</ul>$
$
<h3>References</h3>$
<ul>$
<li>Weisstein, E. W., <em>From MathWorld--A Wolfram Web Resource</em>. <a href="http://mathworld.wolfram.com/CoxeterGraph.html">http://mathworld.wolfram.com/CoxeterGraph.html</a>$
<li>Godsil, Chr. and Royle, G., <em>Algebraic Graph Theory</em>. Springer-Verlag, 2001 [ISBN 0-387-95241-1] (p. 69). $
</ul>$
$
<hr>$
<p><a href="index.html">Return to main <b class="sc">RuBy</b> index</a></p>$
<p>Responsible author: <a href="mailto://raymond.bisdorff@uni.lu">R. Bisdorff</a>, Decembre 2005</p>$
</body>$
</html>$
<html>$
<head>$
<meta name="description" content="Entry level to the RuBis decision support methodology pages">$
<meta name="author" content="Raymond Bisdorff">$
<meta name="keywords" content="Digraph3, University, Decision-Aid, RuBy decision support methodology, Operational Research, Graph Theory, Random Graphs, Graph Automorphism, Kernels, Bipolar Valued Logic">$
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">$
<meta http-equiv="Content-Style-Type" content="text/css">$
<STYLE type="text/css">$
  BODY       { font-family:Verdana }$
  H1         { font-size:16pt; color:#339966 }$
  H2         { font-size:14pt; color:#AD2B2E }$
  P          { font-size:12pt }$
  P.tty	     { font-family:courier }$
  B.tty	     { font-family:courier }$
  TD         { text-align:center }$
</STYLE>$
<title>Digraph3 Data set: The cycle graphs</title>$
</head>$
<body>$
<h1>The cycle graph</h1>$
<h2>Kernel orbits</h2>$
<h3>Data type</h3>$
<p>Crisp symmetric simple digraphs</p>$
<h3>Problematics</h3>$
<p>Maximum independent set (MIS), MIS enumeration, unlabelled kernel number.</p>$
<h3>Description</h3>$
<p>Cycle graphs of order <i>n</i> are the simplest circulant digraphs {<b>Z</b>_<i>n</i>, [1,-1]}. They consists of a single Hamiltonian cycle of length <i>n</i>. Being symmetric, the kernels in <i>C<sub>n</sub></i> arge given by the set of maximal independent sets (MIS), denoted MIS(<i>n</i>). The number of MIS in <i>C<sub>n</sub></i>, denoted #MIS(<i>n</i>), is determined by the Perrin sequence. (<a href="https://oeis.org/A001608">A001608</a>).</p>$
$
<p>The cycle graph <i>C<sub>n</sub></i> admits the dihedral automorphism group, which partitions the set MIS(<i>n</i>) into a set of isomorphic MIS orbits, denoted <i>O<sub><i>t</i></sub></i>(<i>n</i>), where 0 <= <i>t</i> <= <i>n</i>/2 denotes the type of symmetry of the orbit, of cardinalities denoted #<i>O<sub><i>t</i></sub></i>(<i>n</i>). The MIS in <i>O<sub><i>t</i></sub></i> admits <i>t</i> central symmetry axes reducing the size of the orbit proportionnally. Thus. the size of <i>O<sub><i>t</i></sub></i> is 2*<i>n</i> for <i>t</i>= 0, and Floor(<i>n</i>/<i>t</i>) otherwise. In general:</p>$
$
<p>(1)&nbsp;&nbsp;&nbsp; #MIS(<i>n</i>) = 2*<i>n</i> * #<i>O<sub>0</sub></i>(<i>n</i>) + <i>n</i> * #<i>O<sub>1</sub></i>(<i>n</i>) + <i>n</i>/2 * #<i>O<sub>2</sub></i>(<i>n</i>) + ... +  2 * #<i>O<sub><i>n</i>/2</sub></i>(<i>n</i>).</p>$
$
<p><i>C</i><sub>5</sub>, the Andrasfai graph of order 2 for instance, admits 5 MISs, all of which are isomorphic under its automorphism group, such that #<i>O<sub><i>1</i></sub></i>(5) = 5. The table below shows the figures for cycle graphs <i>C<sub>n</sub></i> up to <i>n</i> = 20. For <i>n</i> = 50, the Perrin sequence announces #MIS(50) = 1 276 942, with #O(50)= 13 190, of which #O<sub>0</sub>(50) = 12 359, #O<sub>1</sub>(50) = 813, #O<sub>2</sub>(50) = 15,  #O<sub>5</sub>(50) = 1 and #O<sub>25</sub>(50) = 1.</p>$
$
<table border="1">$
<thead><tr>$
<th>n$
<th>#MIS(n)$
<th>#O(n)$
<th>#O<sub>0</sub>(n)$
<th>#O<sub>1</sub>(n)$
<th>#O<sub>2</sub>(n)$
<th>#O<sub>3</sub>(n)$
<th>#O<sub>4</sub>(n)$
<th>#O<sub>5</sub>(n)$
<th>#O<sub>6</sub>(n)$
<th>#O<sub>7</sub>(n)$
<th>#O<sub>8</sub>(n)$
<th>#O<sub>9</sub>(n)$
<th>#O<sub>10</sub>(n)$
<th>...$
<th>#O<sub>15</sub>(n)$
$
$
<tbody>$
<tr>$
<th>2$
<td>2 $
<td>1$
<td>  $
<td>1$
<td>  $
<td>  $
<td>  $
<td>  $
<td>  $
<td>  $
<td> $
<td>  $
$
<tr>$
<th>3$
<td>3 $
<td>1$
$
<td>  $
<td>1$
<td>  $
<td>  $
<td>  $
<td>  $
<td>  $
<td>  $
<td> $
<td>  $
$
<tr>$
<th>4$
<td>2 $
<td>1$
$
<td>  $
<td>$
<td>1 $
<td>  $
<td>  $
<td>  $
<td>  $
<td>  $
<td> $
<td>  $
$
<tr>$
<th>5$
<td>5 $
<td>1$
<td>  $
<td>1$
<td> $
<td>  $
<td>  $
<td>  $
<td>  $
<td>  $
<td> $
<td>  $
$
<tr>$
<th>6$
<td>5 $
<td>2$
<td>  $
<td>$
<td>1 $
<td>1  $
<td>  $
<td>  $
<td>  $
<td>  $
<td> $
<td>  $
$
<tr>$
<th>7$
<td>7 $
<td>1$
<td>  $
<td>1$
<td> $
<td>  $
<td>  $
<td>  $
<td>  $
<td>  $
<td> $
<td>  $
$
<tr>$
<th>8$
<td>10 $
<td>2$
<td>  $
<td>1$
<td> $
<td>  $
<td>1  $
<td>  $
<td>  $
<td>  $
<td> $
<td>  $
$
<tr>$
<th>9$
<td>12 $
<td>2$
<td>  $
<td>1$
<td> $
<td>1  $
<td>  $
<td>  $
<td>  $
<td>  $
<td> $
<td>  $
$
<tr>$
<th>10$
<td>17 $
<td>3$
<td>  $
<td>1$
<td>1 $
<td>  $
<td>  $
<td>1  $
<td>  $
<td>  $
<td> $
<td>  $
$
<tr>$
<th>11$
<td>22 $
<td>2$
<td>  $
<td>2$
<td> $
<td>  $
<td>  $
<td>  $
<td>  $
<td>  $
<td> $
<td>  $
<td>  $
$
<tr>$
<th>12$
<td>29 $
<td>4$
<td>  $
<td>2$
<td> $
<td>  $
<td>1  $
<td>  $
<td>1  $
<td>  $
<td>  $
<td> $
<td>  $
<td>  $
$
<tr>$
<th>13$
<td>39 $
<td>3$
<td>  $
<td>3$
<td> $
<td>  $
<td>  $
<td>  $
<td>  $
<td>  $
<td> $
<td>  $
<td>  $
$
<tr>$
<th>14$
<td>51 $
<td>5$
<td>  $
<td>3$
<td>1 $
<td>  $
<td>  $
<td>  $
<td>  $
<td>1  $
<td> $
<td>  $
<td>  $
$
<tr>$
<th>15$
<td>68 $
<td>5$
<td>1  $
<td>2$
<td> $
<td>1  $
<td>  $
<td>1  $
<td>  $
<td>  $
<td> $
<td>  $
$
<tr>$
<th>16$
<td>90 $
<td>7$
<td>  $
<td>5$
<td>1 $
<td>  $
<td>  $
<td>  $
<td>  $
<td>  $
<td>1 $
<td>  $
<td>  $
$
<tr>$
<th>17$
<td>119 $
<td>6$
<td>1  $
<td>5$
<td> $
<td>  $
<td>  $
<td>  $
<td>  $
<td>  $
<td> $
<td>  $
$
<tr>$
<th>18$
<td>158$
<td>10$
<td>1  $
<td>6$
<td>1 $
<td>  $
<td>  $
<td>  $
<td>1  $
<td>  $
<td> $
<td>1  $
<td> $
$
<tr>$
<th>19$
<td>209$
<td>9$
<td>2  $
<td>7$
<td> $
<td>  $
<td>  $
<td>  $
<td>  $
<td>  $
<td> $
<td>  $
<td>  $
$
<tr>$
<th>20$
<td>277$
<td>14$
<td>2  $
<td>9$
<td>1 $
<td>  $
<td>1  $
<td>  $
<td>  $
<td>  $
<td> $
<td>  $
<td>1  $
$
<tr>$
<th>...$
<td>...$
<td>...$
<td>... $
<td>...$
<td>... $
<td>  $
<td>  $
<td>  $
<td>  $
<td>  $
<td> $
<td>  $
<td>  $
$
<tr>$
<th>30$
<td>4610$
<td>104$
<td>54 $
<td>44$
<td>2 $
<td>1  $
<td>  $
<td>  $
<td>1  $
<td>  $
<td> $
<td>  $
<td>1$
<td>...$
<td>1$
$
$
</tbody>$
</table>$
$
<p>From the fact that #MIS(<i>n</i>) follows a Perrin sequence, we may deduce that : </p>$
<p>(2)&nbsp;&nbsp;&nbsp;#MIS(<i>n</i>) = #MIS(<i>n</i>-2) + #MIS(<i>n</i>-3)</p>$
<p>Asymptotically, #MIS(n) ~ r^n, with r=1.3247179572447... the inverse of the real root of 1-x^2-x^3=0 (see <a href="https://oeis.org/A001608">A001608</a>). If n>9 then #MIS(n)=round(r^n) (Ralf Stephan (ralf(AT)ark.in-berlin.de), 2002).</p>$
$
<p>To prove equation (2), it is possible to show a coordinated unique extension of each MIS in MIS(<i>n</i>-2) and each MIS in MIS(<i>n</i>-3) which determines precisely the set MIS(<i>n</i>). This demonstration by the way defines a particularly efficient recursive algorithm for enumerating all MIS in <i>C<sub>n</sub></i>, we have implemented in C.</p>$
$
<p>Furthermore, from the orbit enumeration, we discover three apparently unknown integer sequences: The total number of orbits #O(<i>n</i>), the type 0 orbits $
#O<sub>0</sub>(<i>n</i>), and the type 1 orbits #O<sub>1</sub>(<i>n</i>) [see <a href="#R1">1</a>,<a href="#R3">3</a>].</p>$
$
<H3>Files</H3>$
<ul>$
<li><a href="perrinMIS.c">C program for generating the set MIS(<i>n</i>).</a>$
</ul>$
<h3>References</h3>$
<ol>$
<li><a name="R1"/>R. Bisdorff and J.L. Marichal (2008). Counting non-isomorphic maximal independent sets of the n-cycle graph. Journal of Integer Sequences, Vol. 11 Article 08.5.7 (<a href="marichal.pdf" target="_blank">open access</a>).</li>$
<li><a href="https://oeis.org/A001608" target="_blank">The Perrin sequence A001608</a>, Encyclopedia of Integer Sequences.</li>$
<li><a name="R3"/><a href="https://oeis.org/A127682" target="_blank">Number of cyclic and palindromic compositions of n in which each term is either 2 or 3 (sequence A127682)</a>, Encyclopedia of Integer Sequences.$
<li>R. Bisdorff, <a href="Classif04Handouts.pdf" taget="_blank">St-Niclas graphs</a>, Communication, 4th Workshop on Classification, Luxembourg, December 2005</li>$
</ol>$
<hr>$
<p><a href="index.html">Return to <b class="sc">Content Table</b></a></p>$
<p>Responsible author: <a href="mailto://raymond.bisdorff@uni.lu">R. Bisdorff</a>, Decembre 2005</p>$
</body>$
</html>$
<html>$
<head>$
<meta name="description" content="Entry level to the RuBy decision support methodology pages">$
<meta name="author" content="Raymond Bisdorff">$
<meta name="keywords" content="University, Decision-Aid, RuBy decision support methodology, Operational Research, Graph Theory, Random Graphs, Graph Automorphism, Kernels, Bipolar Valued Logic">$
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">$
<meta http-equiv="Content-Style-Type" content="text/css">$
<title>Ruby Data set: The Franklin graph</title>$
<STYLE type="text/css">$
  BODY       { font-family:Verdana }$
  H1         { font-size:16pt; color:#339966 }$
  H2         { font-size:14pt; color:#AD2B2E }$
  P          { font-size:10pt }$
  P.tty { font-family:courier }$
  B.tty { font-family:courier }$
  B.sc  { font-variant:small-caps }$
</STYLE>$
</head>$
<body>$
<h1>Ruby Data set</h1>$
<h2>The Franklin graph</h2>$
<h3>Data type</h3>$
<p>Arc-transitive (symmetric) graph</p>$
<h3>Problematics</h3>$
<p>Kernel equation system symmetries, conjecture on kernel numbers, clustering</p>$
<h3>Description</h3>$
$
<p>The Franlin graph is a famous 12-vertex symmetric cubic graph discussed in map colouring. It is constructed on X = {1,2,3,4,5,6} from the circulant {-1,1} and an irregular circulant {-(3+1),1+3}.</p>$
$
<img src="franklin.png">$
$
<p>The Franklin graph supports 17 different kernel solutions, which give three kernel orbits following the automorphisms group of the graph. The unlabelled kernel number is therefore <b>3</b>.</p>$
<h3>Proof</h3>$
<p>The automorphism group is determined by three actions: $
<ol>$
<li>a lateral folding k_{-1,1} = k-1_{-(3+1),1+3} and k+1_{-1,1} = k+2_{-(3+1),1+3} with k = 2,4,6 in Z6;$
<li>a lateral folding (3-k)_{-1,1} = (4+k)_{-(3+1),1+3} with k = 0,1,2;$
<li>a rotation of degree 2: k_i = k+2_i, with k in Z6 and i = {-1,1},{-(3+1),1+3}.$
</ol>$
</p>$
$
<p>When reducing the multiplicity of the kernel solutions along the orbits of the automorphic group actions, we stay in fact with only three independent kernel solutions, shown below. Solution 1 represents twelve kernel solutions, Solution 2 represents three, and Solution 3 represents two of the initial 17 kernel solutions.</p>$
$
<img src="franklinkernels.png">$
$
<H2>Files</H2>$
<ul>$
<li><a href="franklin.py">The Franklin graph (Python file format)</a>$
<li><a href="franklin.txt">All 17 kernel solutions of the Franklin graph (Text file format)</a>$
</ul>$
<h2>References</h2>$
<ul>$
<li>Weisstein, E. W., <em>From MathWorld--A Wolfram Web Resource</em>. <a href="http://mathworld.wolfram.com/FranklinGraph.html">http://mathworld.wolfram.com/FranklinGraph.html</a>$
<li>Godsil, Chr. and Royle, G., <em>Algebraic Graph Theory</em>. Springer-Verlag, 2001 [ISBN 0-387-95241-1] $
</ul>$
$
<hr>$
<p><a href="index.html">Return to main <b class="sc">RuBy</b> index</a></p>$
<p>Responsible author: <a href="mailto://raymond.bisdorff@uni.lu">R. Bisdorff</a>, Decembre 2005</p>$
</body>$
</html>$
<html>$
<head>$
<title>Ruby Data set</title>$
</head>$
<body>$
<h1>Ruby Data set</h1>$
<h2>Title</h2>$
<p>The Heawood graph</p>$
<h2>Data type</h2>$
<p>Symmetric cubic cage graph</p>$
<h2>Problematics</h2>$
<p>Kernel equation system solution space symmetries, conjecture on kernel numbers, clustering</p>$
<h2>Description</h2>$
$
<p>The Heawood graph is a famous cubic graph of order 14, size 42 (fill rate 23%) with girth 6. It is constructed on 14 nodes with alternating circulants {-1,1,5} and {-5, -1,1} .</p>$
<img src="heawood.png">$
$
<p>The Heawood graph supports 37 different labelled kernels, among them obviously the two maximal sets of either odd or even numbered nodes of cardinality 7. Indeed the chords in the 14 nodes cycle are all connecting an even node to an odd node.</p> $
$
<p>Following the conjecture on the unlabelled kernel number of a symmetric (arc-transitive) graph, we should however find anough symmetry in the Heawood graph such that the symmetry congruence classes induced on the kernel equation system solution space is less or equal 14, i.e. the order of the graph.</p>$
$
<p>Indeed, the kernel number of the Heawood graph is <b>3.</b></p>$
<h3>Proof</h3>$
<p>The <a href="http://cs.anu.edu.au/~bdm/nauty/">nauty</a> program, a software package for computing the automorhism group of a graph, reveals us that the Heawood graph supports four automorphic actions (the nodes are enumerated from 0 to 13):$
<ol>$
<li>a lateral folding: (4, 8),(5, 7),(9, 1),(10, 12),$
<li>a lateral folding: (3, 11),(4, 10),(8, 12),(9, 13),$
<li>a lateral folding: (1, 13),(2, 4),(5, 11),(6, 12).$
<li>a rotational permutation: (0, 1, 2, 3, 4, 5, 10, 9),(6, 11, 8, 13),(7, 12).$
</ol>$
<p>The four generators of the Heawood automorphism group map on the kernel equation system solution space 3 disjoint orbits with the following representatively labelled choices:$
<table>$
<tr><th>#<th>Labelled choice<th>Choice cardinality<th>Orbit cardinality$
<tr><td>1<td>[0, 3, 6, 11]               <td>4  <td>21$
<tr><td>2<td>[1, 3, 7, 10, 13]           <td>5  <td>14$
<tr><td>3<td>[0, 2, 4, 6, 8, 10, 12]     <td>7  <td>2$
</table>$
</p>$
<img src="heawoodkernels.png">$
$
<H2>Files</H2>$
<ul>$
<li><a href="heawood.py">The Heawood graph (Python file format)</a>$
<li><a href="heawood.txt">All 37 kernel solutions of the Heawood graph (Text file format)</a>$
</ul>$
$
<h2>References</h2>$
<ul>$
<li>Weisstein, E. W., <em>From MathWorld--A Wolfram Web Resource</em>. <a href="http://mathworld.wolfram.com/HeawoodGraph.html">http://mathworld.wolfram.com/HeawoodGraph.html</a>$
<li>Godsil, Chr. and Royle, G., <em>Algebraic Graph Theory</em>. Springer-Verlag, 2001 [ISBN 0-387-95241-1] (p. 97). $
</ul>$
$
<h2>Ruby Data Sets</h2>$
<p><a href="index.html">All Ruby data sets.</a>$
$
</body>$
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">$
<html>$
<head>$
<meta name="description" content="Entry level to the RuBy decision support methodology pages">$
<meta name="author" content="Raymond Bisdorff">$
<meta name="keywords" content="Digraph3, Python, University, Decision-Aid, RuBy decision support methodology, Operational Research, Graph Theory, Random Graphs, Graph Automorphism, Kernels, Bipolar Valued Logic">$
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">$
<meta http-equiv="Content-Style-Type" content="text/css">$
 <title>Graph Data sets</title>$
<STYLE type="text/css">$
  BODY       { font-family:Verdana }$
  H1         { font-size:16pt; color:#339966 }$
  H2         { font-size:14pt; color:#AD2B2E }$
  P          { font-size:10pt }$
  P.tty { font-family:courier }$
  B.tty { font-family:courier }$
  B.sc  { font-variant:small-caps }$
</STYLE>$
$
</head>$
<body>$
<h1><b class="sc">Digraph3</b> Data sets</h1>$
<p>The following pages gather historical case studies and examples concerning the active development of the <a href="http://leopold-loewenheim.uni.lu/Digraph3/docSphinx/html/">Digraph3</a> collection of python3 modules for implementing tools and methods of the <b class="sc">RuBis</b> decision aiding approach [<a href="#R1">1</a>].$
</p>$
<h2>Enumerating non isomorphic kernels in symmetric digraphs</h2>$
<h3>List of case studies and examples of kernel orbits</h3>$
<ul>$
  <li><a href="Classif04Handouts.pdf">St-Niclas graphs</a> </li>$
  <li><a href="Cycles.html">Enumerating non isomorphic kernels in cycle graphs</a> </li>$
  <li><a href="Petersen.html">The Petersen graph</a> </li>$
  <li><a href="Coxeter.html">The Coxeter graph</a> </li>$
  <li><a href="Tuttes8cage.html">The Tutte-Coxeter graph</a> </li>$
  <li><a href="Franklin.html">The Franklin graph</a> </li>$
  <li><a href="Heawood.html">The Heawood graph</a> </li>$
  <li><a href="Chvatal.html">The Chv&aacute;tal graph</a> </li>  $
  <li><a href="RandomGenerators.html">Random graphs generators</a> </li>$
</ul>$
<h3>Best choice problematics</h3>$
<ul>$
  <li><a href="PernyCarSelection.html">Perny's classic car selection problem (1992)</a>$
  </li>$
  <li><a href="PostalTriage.html">Well known postal parcels triage machine$
selection (Roy, Bouyssou 1993)</a> </li>$
  <li><a href="RoubensEx1.html">Marc Roubens' example 1 (2004)</a> </li>$
  <li><a href="RoyLausanne.html">Bernard Roy's Lausanne example (1995)</a>$
  </li>$
  <li><a href="Bouyssou11Oct05.html">The stability principle in question</a> (Denis Bouyssou, October 2005) </li>$
  <li><a href="Roy4Nov05.html">Roy's comment on Denis Bouyssou's argument</a> (Bernard Roy, November 2005) </li>$
  <li><a href="Roubens8Dec05.html">The stability principle still in question</a> (Marc Roubens, December 2005) </li>$
</ul>$
$
<h3>Hyperkernels</h3>$
<ul>$
  <li><a href="Berge54.html">Berge's suggestion for hyperkernels</a> </li>$
  <li><a href="K3C3-order.html">K3-C3 headed ordering</a> </li>$
  <li><a href="SocialChoice.html">Social Choice and the Condorcet Paradox (Taylor 2005)</a> </li>$
  <li><a href="Roundgraph.html">Round digraphs</a> </li>$
  <li><a href="RoyTours.html">Bernard Roy's Tours example (2005)</a> </li>$
</ul>$
<h3>Prekernels</h3>$
<ul>$
  <li><a href="Problem30-5.html">Prekernel problem of order 30</a> </li>$
  <li><a href="RoyLausanne.html">Bernard Roy's Lausanne example (1995)</a>$
  </li>$
  <li><a href="RoyTours.html">Bernard Roy's Tours example (2005)</a> </li>$
</ul>$
<h2>References</h2>$
$
<ol>$
<li><a name="R1"/>R. Bisdorff, P. Meyer and M. Roubens (2008). RUBIS: a bipolar-valued outranking method for the choice problem. 4OR, A Quarterly Journal of Operations Research, Springer-Verlag, Volume 6 Number 2 pp. 143-165. (Online) Electronic version: DOI: 10.1007/s10288-007-0045-5 (PDF file (227Kb) for <a href="HyperKernels.pdf">downloading</a>).</li>$
<li>R. Bisdorff, <em>Exploitation en probl&eacute;matique du choix d'une relation de surclassement valu&eacute;e</em>. Conf&eacute;rence invit&eacute;e au s&eacute;minaire "Aide &agrave; la d&eacute;cision" du LAMSADE. Universit&eacute; Paris-Dauphine, 11 octobre 2005. (PDF file (3.5Mb) for <a href="Expose11Oct05.pdf">downloading</a>).</li>$
</0l>$
<hr>$
<p>Last modified by <a href="http://leopold-loewenheim.uni.lu/bisdorff">R. Bisdorff</a>, May 2015</p>$
</body>$
</html>$
<html>$
<head>$
<meta name="description" content="Entry level to the RuBy decision support methodology pages">$
<meta name="author" content="Raymond Bisdorff">$
<meta name="keywords" content="University, Decision-Aid, RuBy decision support methodology, Operational Research, Graph Theory, Random Graphs, Graph Automorphism, Kernels, Bipolar Valued Logic">$
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">$
<meta http-equiv="Content-Style-Type" content="text/css">$
<STYLE type="text/css">$
  BODY       { font-family:Verdana }$
  H1         { font-size:16pt; color:#339966 }$
  H2         { font-size:14pt; color:#AD2B2E }$
  P          { font-size:10pt }$
  P.tty { font-family:courier }$
  B.tty { font-family:courier }$
</STYLE>$
<title>Ruby Data set: Disqualifying the outranking kernel concept as best choice recommendation</title>$
</head>$
<body>$
<h1>Ruby Data set</h1>$
<h2>Title</h2>$
<p>K3-C3 headed ordering disqualifying the outranking kernel concept as best choice recommendation</p>$
<h2>Data type</h2>$
<p>{0,1}-valued digraph</p>$
<h2>Problematics</h2>$
<p>Hyperkernel approach motivation</p>$
<h2>Description</h2>$
<p><i>A</i> = {1,2,3,4,5,6,7,8,9,10}, <i>L</i> = {0,1}</p>$
<p><img src="k3c3-order.png"></p>$
<p>If the tricycle {4,5,6} is transitively closed , we are in the presence of a preorder with two initial equivalences classe: {1,2,3} aand {4,5,6}, which represent the evident and unique possible best choice recommendation.</p>$
<p>Due to the presence of the intransitive tricycle {4,5,6} at the beginning of the preorder, the given digraph does not accept any dominant kernel. This fact definitely eliminates the dominant kernel concept as a direct candidate for the best choice recommendation.</p>$
<p>To overcome this drawback, it is possible to enlarge the digraph with all possible minimal odd circuits. Here we may add the C3:'_4_5_6' to the set of minimal '<em>single</em>' choices. We thus obtain three equivalent dominant hyperkernels: {1,_4_5_6_}, {2,_4_5_6_}, and  {3,_4_5_6_}.</p>$
$
<H2>Files</H2>$
<ul>$
<li><a href="k3c3-order.py">Python data file</a>$
<li><a href="k3c3-orderh1.py">Hypergraph Python data file</a>$
</ul>$
<h2>References</h2>$
<ul>$
<li>Bisdorff, R., Meyer P. and Roubens, M., <em><b>RUBY</b>: a new best choice methodology</em>. SMA Working paper, University of Luxembourg, 2005.$
</ul>$
$
</body>$
<html>$
<head>$
<meta name="description" content="Entry level to the RuBy decision support methodology pages">$
<meta name="author" content="Raymond Bisdorff">$
<meta name="keywords" content="University, Decision-Aid, RuBy decision support methodology, Operational Research, Graph Theory, Random Graphs, Graph Automorphism, Kernels, Bipolar Valued Logic">$
<title>Ruby Data set: Perny's car selection problem</title>$
<style type="text/css">$
<!--$
  BODY       { font-family:Verdana }$
  H1         { font-size:16pt; color:#339966 }$
  H2         { font-size:14pt; color:#AD2B2E }$
  P          { font-size:10pt }$
  P.tty { font-family:courier }$
  B.tty { font-family:courier }$
  B.sc  { font-variant:small-caps }$
  TD    { text-align:center }$
-->$
</style>$
</head>$
<body>$
<h1><b class="sc">RuBy</b> Data set</h1>$
<h2>Perny's car selection problem</h2>$
<h3>Data type</h3>$
<p>[0-100]-valued outranking graph</p>$
<h3>Problematics</h3>$
<p>Best unique choice problematics</p>$
<h3>Description</h3>$
<p>The problem concerns the construction of a unique best choice recommendation on the bais of the following pairwise outranking index (in %) delivered on eight decision alternatives concerning popular cars.</p>$
<table border="1">$
<thead><tr>$
<th>S$
<th>a-vwgc$
<th>b-r9gt$
<th>c-gsax$
<th>d-p305 $
<th>e-tahg$
<th>f-audi$
<th>g-r18g$
<th>h-alfa $
<tbody>$
<tr>$
<th>a-vwgc $
<td>- $
<td>  75 $
<td>  70$
<td>  62$
<td>  0$
<td>  0$
<td>  0$
<td>  0$
<tr>$
<th>b-r9gt$
<th>76$
<td>  -$
<th>  90$
<th>  100$
<th>  82$
<th>  82$
<th>  82$
<th>  80$
<tr>$
<th>c-gsax$
<td>70$
<td>  86$
<td>  -$
<td>  100$
<td>  100$
<td>  46$
<td>  80$
<td>  91$
<tr>$
<th>d-p305$
<td>64$
<td>  65$
<td>  94$
<td>  -$
<td>  88$
<td>  22$
<td>  94$
<td>  74$
<tr>$
<th>e-tahg$
<td>33$
<td>  57$
<td>  93$
<td>  100$
<td>  -$
<td>  0$
<td>  80$
<td>  86$
<tr>$
<th>f-audi$
<td>0$
<td>  73$
<td>  64$
<td>  92$
<td>  76$
<td>  -$
<td>  96$
<td>  80$
<tr>$
<th>g-r18g$
<td>0$
<td>  63$
<td>  73$
<td>  85$
<td>  82$
<td>  70$
<td>  -$
<td>  81$
<tr>$
<th>h-alfa$
<td>0$
<td>  60$
<td>  64$
<td>  60$
<td>  77$
<td>  0$
<td>  0$
<td>  -$
</tbody>$
</table>$
<p>The non trivial best choice decision problem is a classic example recurrently used for presenting the Electre decision aid methods.</p>$
$
<h3>The <b class="sc">RuBy</b> best choice recommendation</h3>$
$
<p>The valued outranking graph admits three outranking kernels: {b-r9gt}, {a-vwgc, f-audi} and {a-vwgc, g-r18g}, and five outranked kernels: {a-vwgc, h-alfa}, {a-vwgc, e-tahg}, {c-gsax}, {d-p305} and {b-r9gt}.</p>$
$
<p><img src="Perny.jpg"></p>$
$
<p>To make a <b class="sc">RuBy</b> recommendation, we must have a look at the <i>L</i>-qualifications of the outranking kernels.</p>$
$
<table border=1>$
<thead><tr>$
<th>Choice$
<th>a-vwgc$
<th>b-r9gt$
<th>c-gsax$
<th>d-p305$
<th>e-tahg$
<th>f-audi$
<th>g-r18g$
<th>h-alfa$
<th>Irred.$
<th>Ind.$
<th>Dom.$
<th>Abs.$
<tbody>$
<tr><th><font color="red">{b-r9gt}<br><b class="sc">RuBy</b> choice</font>$
<td>24$
<th>76$
<td>24$
<td>24$
<td>24$
<td>24$
<td>24$
<td>24$
<td>100$
<td>100$
<th><font color="red">76</font>$
<td>57$
<tr><th>{a-vwgc, f-audi}$
<th>70$
<td>30$
<td>30$
<td>30$
<td>30$
<th>70$
<td>30$
<td>30$
<td>100$
<td>100$
<th>70$
<td>0$
<tr><th>{a-vwgc, g-r18g}$
<th>70$
<td>30$
<td>30$
<td>30$
<td>30$
<td>30$
<th>70$
<td>30$
<td>100$
<td>100$
<th>70$
<td>0$
<tr><th>{a-vwgc, h-alfa}$
<th>74$
<td>26$
<td>26$
<td>26$
<td>26$
<td>26$
<td>26$
<th>74$
<td>100$
<td>100$
<td>0$
<th>74$
<tr><th>{a-vwgc, e-tahg}$
<th>67$
<td>33$
<td>33$
<td>33$
<th>67$
<td>33$
<td>33$
<td>33$
<td>82$
<th>67$
<td>0$
<th>76$
<tr><th>{c-gsax}$
<td>36$
<td>36$
<th>64$
<td>36$
<td>36$
<td>36$
<td>36$
<td>36$
<td>100$
<td>100$
<td>46$
<th>64$
<tr><th>{d-p305}$
<td>40$
<td>40$
<td>40$
<th>60$
<td>40$
<td>40$
<td>40$
<td>40$
<td>100$
<td>100$
<td>22$
<th>60$
<tr><th>{b-r9gt}$
<td>43$
<th>57$
<td>43$
<td>43$
<td>43$
<td>43$
<td>43$
<td>43$
<td>100$
<td>100$
<th>76$
<th>57$
</tbody>$
</table>$
$
<p>Despite the fact of being conjointly an outranking (76% credibility) and an outranked choice (57% credibility), decision action <b>b-r9gt</b> represents the most credible effective best choice. Indeed, it is the most robust recommandation in the sense that it is the only effective outranking choice with a concordance majority of more than 75%.</p> In case the decision maker would accept as satisfactory a global concordance of 70% and more, the <b class="sc">RuBy</b> best choice recommendation would become the quartet {<b>a-vwgc</b>, <b>b-r9gt</b>, <b>f-audi</b>, <b>g-r18g</b>}.$
$
<p> A thorough presentation and discussion of this example is given in Fodor & Roubens (1994). </p>$
$
<h3>Files</h3>$
<ul>$
<li><a href="fodorroubens215data.py">Performance tableau, Python data file</a>$
<li><a href="fodorroubens215.py">Outranking graph, Python data file</a>$
<li><a href="fodorroubens215.pl">Outranking grpah, Gnu-Prolog data file</a>$
</ul>$
<h3>References</h3>$
<ul>$
<li>Perny, P. <em>Mod&eacute;lisation, agr&eacute;gation et exploitation des pr&eacute;f&eacute;rences floues dans une probl&eacute;matique de rangement</em>. Ph.D. Thesis,  Paris-Dauphine University.$
<li>Skalka, J.M., Bouyssou, D. & Vall&eacute;e, D. Electre III et IV: Aspects m&eacute;thodologiques et guide d'utilisation. <em>Documents du LAMSADE</em>, Paris-Dauphine University, 25.$
<li>Fodor, J. and Roubens, M., <em>Fuzzy preference modelling and multicriteria decision support</em>. Kluwer Academic Publishers, 1994 p. 215.$
</ul>$
$
<hr>$
<p><a href="index.html">Return to main <b class="sc">RuBy</b> index</a></p>$
<p>Responsible author: <a href="mailto://raymond.bisdorff@uni.lu">R. Bisdorff</a>, Decembre 2005</p>$
</body>$
</html>$
<html>$
<head>$
<meta name="description" content="Entry level to the RuBy decision support methodology pages">$
<meta name="author" content="Raymond Bisdorff">$
<meta name="keywords" content="University, Decision-Aid, RuBy decision support methodology, Operational Research, Graph Theory, Random Graphs, Graph Automorphism, Kernels, Bipolar Valued Logic">$
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">$
<meta http-equiv="Content-Style-Type" content="text/css">$
<title>Ruby Data set: The Petersen graph</title>$
<STYLE type="text/css">$
  BODY       { font-family:Verdana }$
  H1         { font-size:16pt; color:#339966 }$
  H2         { font-size:14pt; color:#AD2B2E }$
  P          { font-size:10pt }$
  P.tty { font-family:courier }$
  B.tty { font-family:courier }$
  B.sc  { font-variant:small-caps }$
</STYLE>$
</head>$
<body>$
<h1>Ruby Data sets</h1>$
<h2>The Petersen's graph</h2>$
<h3>Data type</h3>$
{0,1}-valued graph (symmetric digraph)$
<h3>Problematics</h3>$
<p>Kernel extraction, number of kernels</p>$
<h3>Description</h3>$
<p>The data set presents the Petersen graph. This famous graph$
represents the non set inclusion relation on the 10 triplets it is$
possible to build with 5 objects. </p>$
$
<p><img src="petersen.png"></p>$
$
<p>The Petersen graph, contructed from both the circulants {-1,1} (blue nodes) and {-2,2} (pink nodes) on a five element set X = {1, 2, 3, 4,5 } is highly symmetric and therefore supports 15$
kernels, a number that is larger than its order (n = 10). These kernels may$
however be organized into solution types that in fact are isomorphic with respect to the automorphism group of the Petersen graph.</p>$
$
<p>The Petersen graph suggests the idea that for any (sufficiently ?) connected k-regular graph, the number$
of <em>unlabelled kernel solutions</em>, i.e. solutions isomorphic modulo all possible$
symmetry rotations and reflections, might be lower or equal to the order of the graph.</p>$
$
<p>In fact, the <em>unlabelled kernel number</em> of the Petersen graph is <b>2</b>.$
$
<H3>Proof</H3>$
The automorphism group of the Petersen graph is generated for instance by the following four actions:$
<ol>$
<li>a bilateral reflection: (2 6)(3 9)(7 8),$
<li>a bilateral reflection: (3 7)(4 5)(8 9),$
<li>a bilateral reflection: (1 4)(2 3)(6 9)(7 8),$
<li>a bilateral reflection: (0 1)(2 4)(5 6)(7 9).$
</ol>$
The total order of the automorphism group generated with these actions is 120.</p>$
<p>These four generators of the Petersen graph automorphism group map on the kernel equation system solution space 2 orbits listed below: </p>$
$
<p><b>{'3', '6', '5'}</b><br>$
{'2', '9', '5'}<br>$
{'8', '1', '9'}<br>$
{'7', '4', '6'}<br>$
{'0', '8', '7'}<br>$
{'1', '4', '5'}<br>$
{'8', '2', '4'}<br>$
{'7', '1', '3'}<br>$
{'0', '2', '6'}<br>$
{'0', '9', '3'}</p>$
$
<p><b>{'0', '8', '2', '9'}</b><br>$
{'1', '9', '5', '3'}<br>$
{'2', '4', '6', '5'}<br>$
{'0', '7', '3', '6'}<br>$
{'8', '7', '1', '4'}</p>$
$
<p>Both choice types  are illustrated below:</p>$
<img src="petersenKernels.png">$
$
$
$
<H3>Files</H3>$
<ul>$
<li><a href="petersen.py">Python file</a>$
<li><a href="petersen.pl">Gnu-Prolog file</a>$
</ul$
$
<h3>References</h3>$
<p>Holton, D.A. & Sheehan, J., <em>The Petersen Grpah</em>. Cambridge University Press, 1993.</p>$
$
<hr>$
<p><a href="index.html">Return to main <b class="sc">RuBy</b> index</a></p>$
<p>Responsible author: <a href="mailto://raymond.bisdorff@uni.lu">R. Bisdorff</a>, Decembre 2005</p>$
</body>$
</html>$
<html>$
<head>$
<meta name="description" content="Entry level to the RuBy decision support methodology pages">$
<meta name="author" content="Raymond Bisdorff">$
<meta name="keywords" content="University, Decision-Aid, RuBy decision support methodology, Operational Research, Graph Theory, Random Graphs, Graph Automorphism, Kernels, Bipolar Valued Logic">$
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">$
<meta http-equiv="Content-Style-Type" content="text/css">$
<title>Ruby Data set: Postal parcels triage machine selection</title>$
<STYLE type="text/css">$
  BODY       { font-family:Verdana }$
  H1         { font-size:16pt; color:#339966 }$
  H2         { font-size:14pt; color:#AD2B2E }$
  P          { font-size:10pt }$
  P.tty { font-family:courier }$
  B.tty { font-family:courier }$
  B.sc  { font-variant:small-caps }$
</STYLE>$
</head>$
<body>$
<h1>Ruby Data set</h1>$
<h2>Postal parcels triage machine selection</h2>$
<h3>Data type</h3>$
<p>[0-1]-valued robustness index</p>$
<h3>Problematics</h3>$
<p>Best unique choice problematics</p>$
<h3>Description</h3>$
<p>The example concerns a triage machine selection problem for a postal parcels sorting center in Paris, thoroughly discussed in Roy and Bouyssou (1993).</p>$
<p><i>A</i> = {1,2,3,4,5,6,7,8,9}, <i>L</i> = [0,1] (rational 0-1 interval)$
<table border="1">$
<thead><tr>$
<th>S$
<th>1$
<th>2$
<th>3$
<th>4 $
<th>5$
<th>6$
<th>7$
<th>8$
<th>9$
<tbody>$
<tr>$
<th>1 $
<td>-$
<td>0.72$
<td>0.67$
<td>0.79$
<td><b>0.92</b>$
<td>0.74$
<td>0.69$
<td>0.25$
<td>0.05$
<tr>$
<th>2$
<td>0.69$
<td>-$
<td>0.97$
<td>0.72$
<td><b>0.92</b>$
<td>0.64$
<td>0.00$
<td>0.27$
<td>0.67$
<tr>$
<th>3$
<td><b>0.62</b>$
<td><b>0.92</b>$
<td>-$
<td><b>0.85</b>$
<td><b>0.92</b>$
<td><b>0.77</b>$
<td>0.21$
<td><b>0.79</b>$
<td><b>0.59</b>$
<tr>$
<th>4$
<td>0.69$
<td>0.85$
<td>0.79$
<td>-$
<td><b>1.00</b>$
<td>0.72$
<td>0.24$
<td>0.08$
<td>0.04$
<tr>$
<th>5$
<td>0.00$
<td>0.00$
<td>0.00$
<td>0.00$
<td>-$
<td>0.00$
<td>0.00$
<td>0.00$
<td>0.00$
<tr>$
<th>6$
<td>0.00$
<td>0.00$
<td>0.00$
<td>0.00$
<td><b>0.95</b>$
<td>-$
<td>0.42$
<td>0.00$
<td>0.00$
<tr>$
<th>7$
<td><b>0.77</b>$
<td><b>0.57</b>$
<td>0.30$
<td><b>0.59</b>$
<td><b>0.87</b>$
<td><b>0.92</b>$
<td>-$
<td><b>0.79</b>$
<td>0.09$
<tr>$
<th>8$
<td>0.45$
<td>0.21$
<td>0.16$
<td>0.21$
<td><b>0.67</b>$
<td>0.27$
<td>0.27$
<td>-$
<td>0.64$
<tr>$
<th>9$
<td>0.12$
<td>0.18$
<td>0.06$
<td>0.17$
<td><b>0.74</b>$
<td>0.00$
<td>0.00$
<td>0.48$
<td>-$
</tbody>$
</table>$
<small>Source: Roy & Bouyssou (1993) p. 383</small>$
$
<h3>The <b class="sc">RuBy</b> best choice recommendation</h3>$
$
<p>The valued outranking graph admits two dominant kernels: {3, 7} and {1, 8} and one absorbent kernel: {5}.</p>$
<p><img src="roybouy383.png"</p>$
$
<p>Both dominant kernels are super strict and we may have a look at their <i>L</i>-qualifications in order to select one of them.</p>$
<table border=1>$
<thead><tr>$
<th>Choice$
<th>1$
<th>2$
<th>3$
<th>4 $
<th>5$
<th>6$
<th>7$
<th>8$
<th>9$
<th>Irred.$
<th>Ind.$
<th>Dom.$
<th>Abs.$
<tbody>$
<tr><th>{3, 7}$
<td>0.24$
<td>0.30$
<th>0.70$
<td>0.30$
<td>0.24$
<td>0.24$
<th>0.76$
<td>0.24$
<td>0.41$
<td>0.70$
<th>0.70$
<th>0.59$
<td>0.00$
<tr><th>{1, 8}$
<th>0.55$
<td>0.45$
<td>0.45$
<td>0.45$
<td>0.45$
<td>0.45$
<td>0.45$
<th>0.55$
<td>0.45$
<td>0.75$
<th>0.55$
<th>0.64$
<td>0.00$
<tr><th>{5}$
<td>0.08$
<td>0.08$
<td>0.08$
<td>0.00$
<th>1.00$
<td>0.05$
<td>0.13$
<td>0.33$
<td>0.26$
<td>1.00$
<th>1.00$
<td>0.00$
<th>0.67$
</tbody>$
</table>$
$
<p>When compard with {1,8}, the first choice {3, 7} easily appears as unique most credible best choice recommendation. Whereas {5} definitely appears to be a credible worst choice.</p>$
$
<H3>Files</H3>$
<ul>$
<li><a href="roybouy383.py">Python data file</a></p>$
<li><a href="roybouy383.pl">Gnu-Prolog data file</a></p>$
</ul>$
<h3>References</h3>$
<ul>$
<li>Roy, B & Bouyssou, D., <em>Aide Multicrit&egrave;re M-` la D&eacute;cision: M&eacute;thodes et Cas</em>. Economica, Paris, 1993, p. 336$
<li>Bisdorff, R. et Roubens, M., Le temps de noyaux. Dans <em>Regards crois&eacute;ses sur les m&eacute;thodes quantitatives de gestion</em>. J. Bair et V. Henry (ed.), Les Editions de l'Universit&eacute; de Li&egrave;ge, 2004, 41-54.$
</ul>$
<hr>$
<p><a href="index.html">Return to main <b class="sc">RuBy</b> Data Sets page</a></p>$
<p>Last modified by <a href="../index.html">R. Bisdorff</a>, December 2005</p>$
</body>$
</html>$
<html>$
<head>$
<title>Ruby Data set</title>$
<STYLE>$
<!--$
		TD { text-align: right }$
-->$
</STYLE>$
</head>$
<body>$
<h1>Ruby Data sets</h1>$
<h2>Title</h2>$
<p>Prekernel problem of order 30</p>$
<h2>Data type</h2>$
[0, 100]-valued digraph$
<h2>Problematics</h2>$
<p>Best unique choice problematics, prekernel approach test</p>$
<h2>Description</h2>$
<p>The example presents a random generated digraph of order 30 and size$
50, i.e. a fill rate  of  5.7 %.</p>$
$
<p><img src="problem30-5.png"></p>$
$
<p>Due to the presence of 18 L-undetermined arcs, the digraph does$
not support any L-determined kernel, despite the clear orientation of$
 the digraph appearing with a layered presentation of the digraph as shown in the picture above (Thanks to the <a href="http://www.informatik.uni-kiel.de/~progsys/relview.shtml">Relview</a> system).</p>$
$
<p>Two partial kernels, one dominant and one absorbent, may however be$
computed: ['10','19','22'] respectively$
['7','14','17','18','19','22','25']. </p>$
$
<p>These prekernels deliver the stable part of a dominant and an absorbent kernel that will appear with each possible logical determination -$
either L-true or L-false - of the 18 L-undetermined arcs.</p>$
$
<p>The digraphs presents 7 odd intransitive circuits ([5, 23, 11, 27,$
1, 13, 24] for instance). They don't appear however neither at the$
beginning nor the end of the relation.</p>$
$
$
<H2>Files</H2>$
<ul>$
<li><a href="problem30-5.py">Python file</a>$
<li><a href="problem30_5.pl">Gnu-Prolog file</a>$
</ul$
$
<h2>References</h2>$
<p>R. Bisdorff and M. Pirlot, <em>Computing kernels in bipolar$
valued digraphs</em>. Working paper, 2005</p>$
$
</body>$
<html>$
<head>$
<title>Ruby Data set: Random digraphs</title>$
<STYLE type="text/css">$
  BODY       { font-family:Verdana }$
  H1         { font-size:16pt; color:#339966 }$
  H2         { font-size:14pt; color:#AD2B2E }$
  P          { font-size:10pt }$
  P.tty { font-family:courier }$
  B.tty { font-family:courier }$
</STYLE>$
</head>$
<body>$
<h1>Ruby Data Sets</h1>$
<h2>Random digraphs</h2>$
<p>Python tools for generating random graphs</p>$
<h2>Data type</h2>$
<p>Random digraphs</p>$
<h2>Problematics</h2>$
<p>Maximum independent sets computation, number of kernels</p>$
<h2>Description</h2>$
<p>The python implementation of digraphs is the following:</p>$
<p class="tty">$
###################################<br>$
# python digraph implementation&nbsp;&nbsp;&nbsp;#<br>$
# RB december 2005&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#<br>$
###################################<br>$
# list of nodes (decision actions) of the digraph<br>$
<b>actionset</b> = [<br>$
'1',<br>$
'2',<br>$
'3',<br>$
]<br>$
# logical bipolar characterisation domain of the underlying relation<br>$
<b>valuationdomain</b> = {'min':0.0, 'med':1.0, 'max':2.0}<br>$
# Characterisation of the digraph relation as a dictionnary matrix<br>$
# for all <i>x</i>,<i>y</i> in actionset, relation[<i>x</i>][<i>y</i>] renders <i>v</i> with<br>$
# <i>v</i> < <i>med</i> = 1.0 signifying the absence of the arc (<i>x</i>,<i>y</i>), and<br>$
# <i>v</i> > <i>med</i> = 1.0 signifying the presence of the arc (<i>x</i>,<i>y</i>).<br>$
<b>relation</b> = {<br>$
'1': {<br>$
'1':0.0,<br>$
'2':0.0,<br>$
'3':2.0,<br>$
},<br>$
'2': {<br>$
'1':0.0,<br>$
'2':0.0,<br>$
'3':2.0,<br>$
},<br>$
'3': {<br>$
'1':2.0,<br>$
'2':0.0,<br>$
'3':0.0,<br>$
},<br>$
}</p>$
$
</ul>$
<H2>Files</H2>$
<p>Python tools for computing maximum independent sets from random <i>G</i>( <i>n</i>, <i>P</i>(arc)) digraphs and from random <i>G</i>( <i>n</i>, <i>k</i>-reg) digraphs.</p>$
<ul>$
<li><a href="generateRandomGraphs.py"><i>G</i>(<i>n</i>,<i>P</i>(arc)) instance generator</a>, usage: <b class="tty">python generateRandomGraphs.py &lsaquo;order&rsaquo; &lsaquo;arc-probability(in %)&rsaquo;</b></li>$
<li><a href="genRandRegGraph.py"><i>G</i>(<i>n</i>,<i>r</i>-reg) instance generator</a>, usage: <b class="tty">python genRandRegGraph.py &lsaquo;order&rsaquo; &lsaquo;degree&rsaquo;</b></li>$
<li><a href="genRandDegreeSequenceGraph.py"><i>G</i>(<i>n</i>, degree sequence) instance generator</a>, usage: <b class="tty">python genRandDegreeSequenceGraph.py &lsaquo;order&rsaquo; [&lsaquo;degree-sequence&rsaquo;]</b></li>$
<li><a href="dimacs2py.py">Dimacs to Python converter</a>, usage: <b class="tty">python dimacs2py.py &lsaquo;File&rsaquo;</b> (in Dimacs graph format)</li>$
<li><a href="biggraphstatistics.py">Graph statistics</a>, usage: <b class="tty">python biggraphstatistics.py &lsaquo;File&rsaquo;</b> (without <b class="tty">.py</b> extension)</li>$
<li><a href="allkernelsnewgenerator.py">Kernel extraction</a>, usage: <b class="tty">python allkernelsnewgenerator.py &lsaquo;File&rsaquo;</b> (without <b class="tty">.py</b> extension)</li>$
<li><a href="randreg17-4.py">Random quartic graph of order 17</a>$
<li><a href="rand100-50.py"><i>G</i>(100,0.5)</a>$
</ul>$
<h2>References</h2>$
<ul>$
<li>B&eacute;la Bollob&aacute;s, <em>Random Graphs</em> (2nd Ed.), Cambridge University Press 2001. $
</ul>$
$
</body>$
<html>$
<head>$
<meta name="description" content="Entry level to the RuBy decision support methodology pages">$
<meta name="author" content="Raymond Bisdorff">$
<meta name="keywords" content="University, Decision-Aid, RuBy decision support methodology, Operational Research, Graph Theory, Random Graphs, Graph Automorphism, Kernels, Bipolar Valued Logic">$
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">$
<meta http-equiv="Content-Style-Type" content="text/css">$
<title>Ruby Data set: Marc Roubens' example from December 8, 2005</title>$
<STYLE type="text/css">$
  BODY       { font-family:Verdana }$
  H1         { font-size:16pt; color:#339966 }$
  H2         { font-size:14pt; color:#AD2B2E }$
  P          { font-size:10pt }$
  P.tty { font-family:courier }$
  B.tty { font-family:courier }$
  B.sc  { font-variant:small-caps }$
</STYLE>$
$
</head>$
<body>$
<h1>Ruby Data set</h1>$
<h2>The stability principle in question again</h2>$
<p>Marc Roubens' example from December 8, 2005.</p>$
<h3>Data type</h3>$
<p>Didactical crisp outranking digraph</p>$
<h3>Problematics</h3>$
<p>Best unique choice problematics, the stability principle in question</p>$
<h3>Description</h3>$
<p>The set <i>A</i> of potential decision actions contains 60 actions : action 1 outranks actions 2 and 3, action 2 outranks actions 4 to 60. The choice <i>Y</i>= {1, 2} gives an interesting best choice candidate as it verifies three of the five principles of a <b class="sc">Ruby</b> best choice recommendation: B1 (outranking), B2 (minimality) and B3 (effecivity).</p>$
<p>Is it reasonnable to say that: </em>&ldquo; ... <em>any decision maker confronted to <i>Y</i>:{1,2} will consider that action 2 should not be retained as it is outranked by action 1</em> &rdquo; ?</p>$
<p><img src="roubens8Dec05.png"></p>$
<p>Indeed, we may consider that actions 1 and 2 must be retained for a final choice as, for one, action 2 is on its own outranking 57 actions out of 60, and, for two, keeping action 2 without action 1 is inconsistent with principle B1 (outranking). Following principle B4 (stabilility) we will eventually choose action 1. But this is inconsistent. Keeping the outranking kernel {1,4,5,...,60} instead is deceiving as it renders 58 actions out of 60.</p>$
<h3><b class="sc">Ruby</b> analysis</h3>$
<p>The given outranking graph presents the following minimal outranking and outranked choices:$
<ol>$
<li><font color="red">{1,4,...,60}</font>: strict minimal and stable outranking  choice (kernel) and <b><font color="red"><b class="sc">Ruby</b> recommendation</font></b>;$
<li><font color="blue">{1,2}</font>: minimal (unstable) outranking choice;$
<li><font color="blue">{3,4,...,60}</font>: strict minimal and stable outranked choice (kernel).$
</ol>$
<h3>Comment</h3>$
<p>We dont share the previous deception concerning the <b class="sc">Ruby</b> best choice recommendation {1,4,5,....60}. On the contrary, it is the only reasonnable one. If we keep 58 actions out of 60, this is only normal consequence of the fact that these 58 decision actions are all mutually incomparable. The given outranking graph is indeed nearly empty (<em>It is interesting to notice here that a standard graphical representation, as shown in the figure above, is misleading the reader, as it suggests implicitely a transitive closure in the style of a Hasse diagram</em>). And, the <b class="sc">Ruby</b> best choice recommendation {1,4,5,....,60} actually makes the point. How can it be indeed that these 58 actions are all incomparable ? The <b class="sc">Ruby</b> recommendation will correctly help concentrate the ongoing decision making process on precisely the part of the outranking graph that is here problematic.</p> $
$
<p>Recommending {1,2}, the other minimal but unstable outranking choice, leaves the decision maker with a couple of decision actions that, at this moment of the decision making process, have already been judged to be comparable. Following the psychological mask effect, this recommendation can only convince the decision maker to ultimately adopt action 1 as the best choice.  But this is highly inconsistent as we don't know anything of the preferences the decision maker may eventually experience between action 1 and nearly the whole set of other potential decision actions (57 out of 60 !)</p>$
$
<p>If it is easy to convince a decision maker of the utility of the principles B1, B2 and B3 (minimal strict outranking choice) for ensuring the property to be indeed a potential <em>best</em> choice, the stability principle (B4), however, only shows its utility in the presence of partial and intransitive outrankings. Such intransitivities result from an always possible bad comparability of the decision actions, itself a consequence of missing evaluations, of balanced criteria coalitions in favour and disfavour of an outranking situation, and/or of the presence of veto situations. A best choice recommendation, to be effective, must help concentrating the decision making process on precisely these difficult and yet unexplored parts of the decision analysis. The stability principle (B4) does exactly this and therefore represents an essential pillar of the <b class="sc">Ruby</b> methodology.</p>    $
<H3>Files</H3>$
<ul>$
<li><a href="roubens8Dec05.py">Python file</a>$
</ul>$
<h3>References</h3>$
<ul>$
<li>R. Bisdorff, <em>Exloitation en probl&eacute;matique du choix d'une relation de surclassement valu&eacute;e</em>. Communication au S&eacute;minaire du Lamsade, 11 octobre 2005. <a href="../Lamsade11Oct05Handouts.pdf">(PDF for dowloading)</a>.$
</ul>$
$
<hr>$
$
<p><a href="index.html">Return to main <b class="sc">RuBy</b> index</a></p>$
<p>Responsible author: <a href="mailto://raymond.bisdorff@uni.lu">R. Bisdorff</a>, Decembre 2005</p>$
</body>$
</html>$
$
<html>$
<head>$
<meta name="description" content="Entry level to the RuBy decision support methodology pages">$
<meta name="author" content="Raymond Bisdorff">$
<meta name="keywords" content="University, Decision-Aid, RuBy decision support methodology, Operational Research, Graph Theory, Random Graphs, Graph Automorphism, Kernels, Bipolar Valued Logic">$
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">$
<meta http-equiv="Content-Style-Type" content="text/css">$
<title>Ruby Data set: Roubens' example 1</title>$
<STYLE type="text/css">$
  BODY       { font-family:Verdana }$
  H1         { font-size:16pt; color:#339966 }$
  H2         { font-size:14pt; color:#AD2B2E }$
  P          { font-size:10pt }$
  P.tty { font-family:courier }$
  B.tty { font-family:courier }$
  B.sc  { font-variant:small-caps }$
</STYLE>$
$
</head>$
<body>$
<h1><b class="sc">RuBy</b> Data set</h1>$
<h2>Roubens' example 1</h2>$
<h3>Data type</h3>$
<p>{0,1}-valued digraph</p>$
<h3>Problematics</h3>$
<p>Best unique choice problematics, <b class="sc">RuBy</b> methodology, Super strict dominant kernels</p>$
<h3>Description</h3>$
<p><i>A</i> = {1,2,3,4,5,6}, <i>L</i> = {0,1}.</p>$
<p><img src = "roubensEx1.png"></p>$
<p>Marc Roubens proposed this example in spring 2004, as support for the discussion of the <b class="sc">RuBy</b> methodology.</p>$
$
<h3>The <b class="sc">RuBy</b> best choice recommendation</h3>$
<p>We may observe two <em>outranking</em> kernels: {3,4} and {1,5,6}, and one <em>outranked</em> kernel: {2,5,6}.</p>$
<p><img src = "roubensex1kernels.png"></p>$
$
<p>The first choice: {3,4} is clearly not in intersection with the outranked kernel and therefore delivers the <b class="sc">RuBy</b> best choice recommendation. We call such kernels <em>super strict outranking</em>.</p>$
$
<p>Following the <b class="sc">Electre I</b> methodology, one would collapse the circuit (2,3,5,4,2) and propose more readily these nodes as equivalent best choice recommendations. Here the <b class="sc">RuBy</b> recommendation with the <em>super strict outranking</em> kernel concept is more discriminant.</p>$
$
<H3>Files</H3>$
<ul>$
<li><a href="roubensEx1.py">Python data file</a>$
</ul>$
<h3>References</h3>$
<ul>$
<li>Bisdorff, R. et Roubens, M., Le temps de noyaux. Dans <em>Regards crois&eacute;ses sur les m&eacute;thodes quantitatives de gestion. J. Bair et V. Henry (ed.), Les Editions de l'Universit&eacute; de Li&egrave;ge, 2004, 41-54.$
</ul>$
$
<hr>$
<p><a href="index.html">Return to main <b class="sc">RuBy</b> index</a></p>$
<p>Responsible author: <a href="mailto://raymond.bisdorff@uni.lu">R. Bisdorff</a>, Decembre 2005</p>$
</body>$
</html>$
<html>$
<head>$
<title>Ruby Data set</title>$
</head>$
<body>$
<h1>Ruby Data set</h1>$
<h2>Title</h2>$
<p>Round digraphs</p>$
<h2>Data type</h2>$
<p>{0,1}-valued digraph</p>$
<h2>Problematics</h2>$
<p>Hyperkernel approach test, minimal odd circuits collapse fixpoint</p>$
<h2>Description</h2>$
<p><i>A</i> = {1,2,3,4,5}, <i>L</i>={0,1}</p>$
<p><img src="roundgraph.png"></p>$
<p>This example of a round digraph illustrates the fact that it is not sufficient in general to collapse minimal odd circuits from a digraph, in order to get a odd circuit free digraph. We have to iterate the procedure until no new odd circuit may be detected anymore.</p>$
<p>In this example we have to iterate the minimal odd circuit detection twice. A first cicruit '_1_2_3_' is added the first time. The second time a further odd circuit: '__1_2_3__4_5_' is added. No further odd circuits may be added and the final hyper graph is the following:<br>$
<tt>$
<i>A</i> = {1, 2, 3, 4, 5, _1_2_3_, __1_2_3__5_4_}<br>$
<i>S</i> = {(1, 2), (1, _1_2_3), (1, __1_2_3__5_4_),<br> $
(2, 3), (2, _1_2_3), (2, __1_2_3__5_4_),<br> $
(3, 1), (3, 4), (3, _1_2_3), (3, __1_2_3__5_4_),<br> $
(4, 5), (4, __1_2_3__5_4_),<br>$
(5, 1), (5, _1_2_3),(5, __1_2_3__5_4_), <br>$
(_1_2_3_, 1),(_1_2_3_, 2),(_1_2_3_, 3),(_1_2_3_, 4), <br>$
(__1_2_3__5_4_, 1), (__1_2_3__5_4_, 2), (__1_2_3__5_4_, 3),(__1_2_3__5_4_, 4),(__1_2_3__5_4_, 5)}$
</tt> </p>$
<p>The final hyper graph supports a unique dominant as well as absorbent kernel which is as expected the odd circuit '__1_2_3__4_5_'.</p>$
$
<H2>Files</H2>$
<ul>$
<li><a href="roundgraph.py">Python data file</a>$
<li><a href="roundgraphh1.py">Hypergraph 1 </a>$
<li><a href="roundgraphh2.py">Hypergraph 2 </a>$
</ul>$
$
<h2>References</h2>$
<ul>$
<li>Bisdorff, R., Meyer P. and Roubens, M., <em><b>RUBY</b>: a new best choice methodology</em>. SMA Working paper, University of Luxembourg, 2005.$
<li>Bang-Jensen, J. and Gutin, G., <em>Digraphs: Theory and applications</em>. Springer 2001, 203-207$
</ul>$
$
<h2>Ruby Data Sets</h2>$
<p><a href="index.html">All Ruby data sets.</a>$
$
</body>$
<html>$
<head>$
<meta name="description" content="Entry level to the RuBy decision support methodology pages">$
<meta name="author" content="Raymond Bisdorff">$
<meta name="keywords" content="University, Decision-Aid, RuBy decision support methodology, Operational Research, Graph Theory, Random Graphs, Graph Automorphism, Kernels, Bipolar Valued Logic">$
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">$
<meta http-equiv="Content-Style-Type" content="text/css">$
<STYLE type="text/css">$
  BODY       { font-family:Verdana }$
  H1         { font-size:16pt; color:#339966 }$
  H2         { font-size:14pt; color:#AD2B2E }$
  H3         { font-size:12pt; color:#211CB7 }$
  P.tty	     { font-family:courier }$
  P.quote    { margin-left:15px }  $
  B.tty	     { font-family:courier }$
  B.sc       { font-variant:small-caps }$
  TD         { text-align:center }$
  TD.true    { color:red }$
  TD.false   { color:blue }$
</STYLE>$
<title>Ruby data set: The stability in Question: Bernard Roy's comment (Novembre 4, 2005)</title>$
</head>$
<body>$
<h1><b class="sc">Ruby</b> Data Sets</h1>$
<h2>The robustness principle in Question (Roy, November 2005)</h2>$
<p>Roy's comment on Bouyssou's example.</p>$
<h3>Data type</h3>$
<p>Bipolar [0-100]-valued outranking graph</p>$
<h3>Problematics</h3>$
<p>Best choice recommendation, the robustness principle and the stability principle in question</p>$
<h3>Description</h3>$
<p>Following Bouyssou's rejection of the stability principle (see <a href ="Bouyssou11Oct05.html">Bouyssou's example, October 2005</a>), Roy considers again four decision actions <i>A</i>={<i>a</i>,<i>b</i>,<i>c</i>,<i>d</i>} evaluated on a coherent family <i>F</i>={<i>C</i>_1,<i>C</i>_2,<i>C</i>_3,<i>C</i>_4,<i>C</i>_5} of five criteria of equal significance. On each criterion-function we apply a preference scale from 0 to 100 with an indifference threshold of 10, a preference threshold of 14, and a veto threshold of 50. The following performance tableau is given:$
<h4>Performance tableau</h4>$
<table border=1>$
<tr><th>Actions<th><i>C</i>_1<th><i>C</i>_2<th><i>C</i>_3<th><i>C</i>_4<th><i>C</i>_5</tr>$
<tr><th><i>a</i><td>30<td>85<td>80<td>60<td>70</tr>$
<tr><th><i>b</i><td>40<td>60<td>60<td>80<td>75</tr>$
<tr><th><i>c</i><td>75<td>60<td>60<td>25<td>75</tr>$
<tr><th><i>d</i><td>85<td>40<td>70<td>60<td>55</tr>$
</table>$
</p>$
<p>Applying the standard concordance and non-veto principles as promoted in the Electre IS method, we obtain the following valued outranking graph:$
<h4>[0-1]-valued outranking graph</h4>$
<table border=1>$
<tr><th><i>S (in %)</i><th><i>a</i><th><i>b</i><th><i>c</i><th><i>d</i></tr>$
<tr><th><i>a</i><td>-<td class="true">80<td class="true">80<td>0 (veto)</tr>$
<tr><th><i>b</i><td class="true">60<td>-<td class="true">80<td class="true">80</tr>$
<tr><th><i>c</i><td>40<td>0 (veto)<td>-<td class="true">80</tr>$
<tr><th><i>d</i><td class="true">60<td>40<td class="true">60<td>-</tr>$
</table>$
</p>$
<h2>Methodological discussion</h2>$
<h3>Roy's best choice recommendation</h3>$
<p>On this outranking graph, the best choice would naturally be <b>{<i>a</i>,<i>d</i>}</b> as supported  hereafter:</p>$
<p class="quote">&laquo; ... Without even constructing the outranking graph (which, following the Electre IS method, coincides with the <a href ="Bouyssou11Oct05.html">one considered by Bouyssou</a> when a concordance level between 60% and 80% is required) it seems reasonable to me to:</p>$
<p class="quote"><b>1)</b> <b>Not select <i>b</i> once <i>a</i> is selected</b>: <br>$
<i>a</i> is indifferent to <i>b</i> on criteria <i>C</i>_1 and <i>C</i>_5; <i>a</i> is preferred to  <i>b</i> on criterion <i>C</i>_2 and <i>C</i>_3;  <i>b</i> is preferred to <i>a</i> only on criterion <i>C</i>_4.</p>$
<p class="quote"><b>2)</b> <b>Not select <i>c</i> once <i>a</i> is selected</b>: <br>$
<i>a</i> and <i>c</i> are indifferent on criterion <i>C</i>_5, <i>a</i> is significantly preferred to  <i>c</i> on criteria <i>C</i>_2,<i>C</i>_3, and <i>C</i>_4; Only criterion  <i>C</i>_1 favours <i>c</i>.</p>$
<p class="quote"><b>3)</b> <b>Selecting <i>d</i>, however, seems justified</b>: <br>$
The performance profile of <i>d</i> is quite contrasted compared to  <i>a</i> (cf. Criteria <i>C</i>_1 and <i>C</i>_2); <i>d</i> is indifferent to <i>a</i> on criteria <i>C</i>_3 and <i>C</i>_4 and the preference of  <i>a</i> compared to <i>d</i> on criterion <i>C</i>_5 is hardly significant; I don't think thus that <i>d</i> may be considered to be the worst of the four decision alternatives. ....&raquo;</p>$
<p>(Bernard ROY, <em>private communication</em>, November 4, 2005)</p>$
$
<h3><b class="sc">RuBy</b> analysis</h3>$
<p>Applying the <b class="sc">RuBy</b> approach to the outranking graph above gives following results:</p>$
<h4>Minimal, stable outranking and outranked choices</h4>$
<table border=1>$
<tr><th>Choice<th><i>a</i><th><i>b</i><th><i>c</i><th><i>d</i><th>Dom.<th>Abs.</tr>$
<tr><th>{<i>b</i>}<br><font color="red">RuBy choice</font><td>40<td class="true">60<td>40<td>40<td class="true">60<td>0</tr>$
<tr><th>{<i>c</i>}<td>40<td>40<td class="true">60<td>40<td>0<td class="true">60</tr>$
</table>$
<p>Action <i>b</i> represents the best choice and <i>c</i> represents the worst choice, but only with a concordance level of up to 60%. According to the <b class="sc">RuBy</b> methodology, <font color="red">{<i>b</i>}</font> will be here the best choice recommendation, under the condition that a significance of 60% concordance is considered indeed sufficient for supporting it.</p>$
$
<p>This result is not so surprising, as Roy's argument in favour of not selecting <i>b</i> once <i>a</i> is selected, may be mutatis mutandi, applied to the symmetric situation. Following the same scheme of reasonning as Roy, it seams indeed not unreasonable to:</p>$
<ol>$
<li><b>Not select <i>a</i> once <i>b</i> is selected</b>: <br>$
<i>b</i> is preferred to <i>a</i> on criterion <i>C</i>_4; <i>b</i> is (positively) indifferent to <i>a</i> on <i>C</i>_1 and <i>C</i>_5; <i>a</i> is preferred to <i>b</i> only on criterion <i>C</i>_2 and <i>C</i>_3.$
<li><b>Not select <i>c</i> once <i>b</i> is selected</b>: <br>$
<i>b</i> is certainly preferred to <i>c</i> on criterion <i>C</i>_4; <i>b</i> is indifferent to <i>c</i> on <i>C</i>_2, <i>C</i>_3, and <i>C</i>_5; <i>c</i> is only preferred to <i>b</i> on <i>C</i>_1.$
<li><b>Not select <i>d</i> once <i>b</i> is selected</b>: <br>$
<i>b</i> is preferred to <i>d</i> on <i>C</i>_2, <i>C</i>_4, and <i>C</i>_5; <i>b</i> is indifferent to <i>d</i> on <i>C</i>_3; <i>d</i> is only preferred to <i>b</i> only on <i>C</i>_1.$
</ol>$
$
<p>When requiring now, as proposed by Roy above, a concordance level higher than 60%, the <b class="sc">RuBy</b> recommendation gets void. Indeed, the given performance tableau does not support any possible choice recommendations at such a high level of concordance.</p>$
$
<p>Let us now drop for one moment the <b class="sc">RuBy</b> stability principle. The significant minimal outranking and outranked choices we get are the following:</p>$
$
<h4>Minimal outranking choices</h4>$
<table border=1>$
<tr><th>Choice<th>Dominance<th>Absorbency<th>Independence</tr>$
<tr><th>{<i>a</i>,<i>d</i>}<td class="true">80<td class="true">80<td>40</tr>$
<tr><th>{<i>a</i>,<i>c</i>}<td class="true">80<td class="true">60<td>20</tr>$
<tr><th>{<i>b</i>}<td class="true">60<td>0<td class="true">100</tr>$
</table>$
$
<h4>Minimal outranked choices</h4>$
<table border=1>$
<tr><th>Choice<th>Dominance<th>Absorbency<th>Independence</tr>$
<tr><th>{<i>a</i>,<i>d</i>}<td class="true">80<td class="true">80<td>40</tr>$
<tr><th>{<i>b</i>,<i>d</i>}<td class="true">60<td class="true">80<td>20</tr>$
<tr><th>{<i>c</i>}<td>0<td class="true">60<td class="true">100</tr>$
</table>$
$
<p>As evidenced by Roy above, the choice <b>{<i>a</i>,<i>d</i>}</b> is indeed a highly significant minimal outranking choice. However, it is neither stable nor unstable as the corresponding independence statement is at that significance level logically undetermined. Furthermore it is <b>not an effective best choice</b>, as it is, with the same significance of 80% concordance, as well an outranked choice. A second, highly significant minimal outranking choice appears to be the couple <b>{<i>a</i>,<i>c</i>}</b>, but it is definitely not a stable choice, as <i>a</i> clearly outranks <i>c</i> at concordance level 80%. Naturally we recover here again at a 60% level of concordance both, the unique outranking kernel {<i>b</i>}, as well as the unique outranked kernel {<i>c</i>} previously shown.</p>$
$
<p>It is worthwhile noticing finally that, contrary to Roy's idea, the crisp outranking graph one obtains when dropping all binary outranking statements which are not supported with a significance strictly between 60% and 80% of criterial concordance, is not quite the same as the one originally proposed by Denis Bouyssou. To be logically coherent one has indeed to apply the same symmetric dropping rule with respect to the significance of the falsity of some outranking statement. $
<h4>Crisp outranking graph resulting from a "> 60%" significance cut</h4>$
<table border=1>$
<tr><th><i>S_{> 60%}</i><th><i>a</i><th><i>b</i><th><i>c</i><th><i>d</i></tr>$
<tr><th><i>a</i><td>-<td>80<td>80<td>0 (veto)</tr>$
<tr><th><i>b</i><td class="true">50<td>-<td>80<td>80</tr>$
<tr><th><i>c</i><td class="true">50<td>0 (veto)<td>-<td>80</tr>$
<tr><th><i>d</i><td class="true">50<td class="true">50<td class="true">50<td>-</tr>$
</table>$
</p>$
<p>We thus get the symmetrically cut graph, shown above, where several pairwise comparisons, such as between <i>b</i> and <i>a</i>, are in fact logically undetermined at this required level of significance, and not strictly false as in the original Bouyssou example (see <a href ="Bouyssou11Oct05.html">Bouyssou's example, October 2005</a>).This graph supports, as expected, {<i>a</i>,<i>d</i>} with equally high significance, as both an outranking and an outranked prekernel, i.e a minimal outranking, respect. outranked choice with undetermined independence property.$
</p>$
$
<p>Following the <b class="sc">RuBy</b> robustness principle, i.e. the stability of the best choice recommendation with respect to all possible high significance cuts, we must however conclude that the apparent highly significant minimal outranking choices, such as {<i>a</i>,<i>d</i>}, are in fact artifacts of the specifically proposed high significance cut. Neither <i>a</i> nor <i>d</i> present robust outranking properties that confirm their best choice potentiality when lowering the required significance level to 60%. Indeed, as shown above, at the 60% concordance level, it is <i>b</i> and not <i>a</i> which becomes definitely the unique best choice recommendation.</p>$
$
<p>Let us conclude by noticing that on the one hand, - the bipolar valuation of the pairwise outranking via the concordance and non-veto principles and, on the other hand, - the high significance cutting approach, as proposed by Roy above, are not logically compatible in general. The high significance cut, via its logical polarising effect, may produce artificial results not effectively supported by the given performance tableau. That's why in the <b class="sc">RuBy</b> decision aid methodology, we avoid this kind of approach.</p>  $
 $
<h2>Further material</h2>$
<H3>Files</H3>$
<ul>$
<li>The performance tableau (<a href="roy4nov05.py">Python data format</a>)$
<li>Computing the bipolar valued outranking relation (<a href="normalConcordance.py">Python program format</a>)$
<li>The outranking graph (<a href="roy4nov05norm.py">Python data format</a>)$
</ul>$
<h3>References</h3>$
<ul>$
<li>R. Bisdorff, <em>Exloitation en probl&eacute;matique du choix d'une relation de surclassement valu&eacute;e</em>. Communication au S&eacute;minaire du Lamsade, 11 octobre 2005. <a href="lamsadeHandouts.pdf">(PDF for downloading)</a>.$
</ul>$
<hr>$
<p><a href="index.html">Return to main <b class="sc">RuBy</b> index</a></p>$
<p>Responsible author: <a href="mailto://raymond.bisdorff@uni.lu">R. Bisdorff</a>, December 2005</p>$
</body>$
</html>$
<html>$
<head>$
<meta name="description" content="Entry level to the RuBy decision support methodology pages">$
<meta name="author" content="Raymond Bisdorff">$
<meta name="keywords" content="University, Decision-Aid, RuBy decision support methodology, Operational Research, Graph Theory, Random Graphs, Graph Automorphism, Kernels, Bipolar Valued Logic">$
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">$
<meta http-equiv="Content-Style-Type" content="text/css">$
<title>Ruby Data set: Roy's Lausanne example (1995)</title>$
<STYLE type="text/css">$
  BODY       { font-family:Verdana }$
  H1         { font-size:16pt; color:#339966 }$
  H2         { font-size:14pt; color:#AD2B2E }$
  P          { font-size:10pt }$
  P.tty { font-family:courier }$
  B.tty { font-family:courier }$
  B.sc  { font-variant:small-caps }$
  TD    { text-align:center }$
</STYLE>$
$
</head>$
<body>$
<h1><b class="sc">RuBy</b> Data set</h1>$
<h2>Roy's Lausanne example (1995)</h2>$
<h3>Data type</h3>$
<p>[0-100]-valued digraph</p>$
<h3>Problematics</h3>$
<p>Best unique choice problematics, Kitainik's theorem</p>$
<h3>Description</h3>$
<p>The problem, proposed by B. Roy in March 1995 at the Lausanne meeting of the EWG MCDA, concerns the construction of a unique best choice$
recommendation on the basis of the following pairwise outranking$
index (in %) delivered on three decision alternatives.</p>$
<TABLE border=1>$
<THEAD>$
<TR><TH>S<TH>a<TH>b<TH>c$
<TBODY>$
<TR><TH>a<TD>-<TD>55<TD>100$
<TR><TH>b<TD>0<TD>-<TD>100$
<TR><TH>c<TD>55<TD>55<TD>-$
</TBODY>$
</TABLE>$
<p>The example supports the fact that an associated strict median cut digraph does not necessarily deliver a unique best choice. Indeed,  we obtain here two potential best choices: {a} and {c}. But the latter is conjointly a worst choice. This is the starting point for the <b class="sc">RuBy</b> best choice methodology.</p>$
$
<h3>The <b class="sc">RuBy</b> best choice recommendation</h3>$
$
<p>The valued outranking graph admits two outranking kernels: {<b>a</b>} and {<b>c</b>}, and two outranked kernels: {<b>b</b>}, and {<b>c</b>}.</p>$
$
<p><img src="royLausKernels.png"></p>$
$
<p>To make a <b class="sc">RuBy</b> recommendation, we must have a look at the <i>L</i>-qualifications of the outranking kernels.</p>$
$
<table border=1>$
<thead><tr>$
<th>Choice$
<th>a$
<th>b$
<th>c$
<th>Dom.$
<th>Abs.$
<tbody>$
<tr><th><font color="red">{a}<br><b class="sc">RuBy</b> choice</font>$
<th><font color="red">100</font>$
<td>45$
<td>0$
<th><font color="red">55</font>$
<td>45$
<tr><th>{c}$
<td>45$
<td>45$
<th>55$
<th>55$
<th>100$
<tr><th>{b}$
<td>45$
<th>55$
<td>55$
<td>0$
<th>55$
<tr><th>{c}$
<td>0$
<td>0$
<th>100$
<th>55$
<th>100$
</tbody>$
</table>$
<p>Choice {a} delivers the only effective best choice recommendation.</p>$
<H2>Files</H2>$
<ul>$
<li><a href="roylausorig.py">Python data file</a>$
<li><a href="roylausorig.pl">Gnu-Prolog data file</a>$
</ul>$
$
<h2>References</h2>$
<ul>$
<li>Roy, B & Bouyssou, D., <em>Aide Multicrt&egrave;re &agrave; la D&eacute;cision: M&eacute;thodes et Cas</em>. Economica, Paris, 1993, p. 336 $
<li>Bisdorff, R., Logical foundation of fuzzy preferential systems with application to the electre decision aid methods. <em>Computer & Operations Research</em> 27 (2000) 673-687.$
</ul>$
$
<hr>$
<p><a href="index.html">Return to main <b class="sc">RuBy</b> index</a></p>$
<p>Responsible author: <a href="mailto://raymond.bisdorff@uni.lu">R. Bisdorff</a>, Decembre 2005</p>$
$
</body>$
</html>$
<html>$
<head>$
<title>Ruby Data set</title>$
<STYLE>$
<!--$
		TD { text-align: right }$
-->$
</STYLE>$
$
</head>$
<body>$
<h1>Ruby Data set</h1>$
<h2>Title</h2>$
<p>Roy's Tours example</p>$
<h2>Data type</h2>$
<p>[0-100]-valued digraph</p>$
<h2>Problematics</h2>$
<p>Best unique choice problematics (P.alpha). Collapsing intranistive circuits.</p>$
<h2>Description</h2>$
<p>B. Roy proposed this example in February 2005 (ROADEF'2005, Tours) in order to illustrate the necessity to take into accounts intransitive circuits when constructing best choice recommendations.</p>$
$
<p><i>A</i> =  {a,b,c,d,e}, <i>L</i> =[0 - 100].$
<table border="1">$
<thead>$
<tr><th>S<th>a<th>b<th>c<th>d<th>e$
<tbody>$
<tr><th>a<td>-<td>51<td>0<td>0<td>0$
<tr><th>b<td>0<td>-<td>100<td>100<td>50$
<tr><th>c<td>0<td>0<td>-<td>51<td>100$
<tr><th>d<td>100<td>0<td>0<td>-<td>100$
<tr><th>e<td>0<td>0<td>0<td>0<td>-$
</tbody>$
</table>$
</p>$
<p><img src="roy21Avr05one.jpg"></p>$
<p>Following the Electre methodology, the cycle {a,b,c,d} may well be collapsed into a single class of potentially equivalent decision actions which dominate action {e}. Thus these actions constitute the best choice recommendation.</p>$
$
<p>The shown digraph above supports a unique dominant kernel {a,c} with credibility 51%, which should give, following the Ruby methodology, a natural and convincing best choice recommendation. </p> $
$
<p>In the Ruby methodology we only consider odd intransitive circuits for best choice recommendations, so that we here may add the circuit {a,b,d} as potential best choice. In the given mixed hypergraph, the circuit {a,b,d} gives a sure stable partial best choice (100%), whereas {e} represents a sure stable partial worst choice (100%). The initial dominant kernel {a,c} remains however the unique determined best choice recommendation, it is true, with a very low credibility.</p>$
 $
<H2>Files</H2>$
<ul>$
<li><a href="roy21Avr05one.py">Python data file</a>$
<li><a href="roy21Avr05oneh1.py">Hypergraph Python data file</a>$
</ul>$
<h2>References</h2>$
<ul>$
<li>Bisdorff, R., Meyer P. and Roubens, M., <em><b>RUBY</b>: a new best choice methodology</em>. SMA Working paper, University of Luxembourg, 2005.$
</ul>$
$
</body>$
<html>$
<head>$
<title>Ruby Data sets</title>$
</head>$
<body>$
<h1>Ruby Data sets</h1>$
<h2>List of case studies and examples</h2>$
<ul>$
<li><a href="Berge54.html">Berge's suggestion for hyperkernels</a>$
<li><a href="K3C3-order.html">K3-C3 headed ordering</a>$
<li><a href="PernyCarSelection.html">Perny's car selection problem</a>$
<li><a href="Petersen.html">Petersen's graph</a>$
<li><a href="PostalTriage.html">Postal parcels triage machine selection</a>$
<li><a href="Problem30-5.html">Prekernel problem of order 30</a>$
<li><a href="RoubensEx1.html">Marc Roubens' example 1 (2004</a>$
<li><a href="RoyLausanne.html">Bernard Roy's Lausanne example (1995)</a>$
<li><a href="RoyTours.html">Bernard Roy's Tours example (2005)</a>$
<li><a href="Roundgraph.html">Round digraphs</a>$
</ul>$
<p>Last modified by R. Bisdorff, June 2005</p>$
</body>$
<html>$
<head>$
<title>Ruby Data set</title>$
</head>$
<body>$
<h1>Ruby Data set</h1>$
<h2>Title</h2>$
<p>Social Choice</p>$
<h2>Data type</h2>$
<p>Voting profiles</p>$
<h2>Problematics</h2>$
<p>Best unique choice problematics, hyperkernel approach test</p>$
<h2>Description</h2>$
<p>The example concerns the determination of a winner in a voting game.</p>$
<p>The set of 5 candidates is denoted <i>A</i> = {<i>a</i>,<i>b</i>,<i>c</i>,<i>d</i>,<i>e</i>}. The jury consists of seven equi-significant voters <i>C</i> = {<i>v</i>_1,<i>v</i>_2,<i>v</i>_3,<i>v</i>_4,<i>v</i>_5,<i>v</i>_6,<i>v</i>_7} with following individual preferences:</p>$
<p><table border="1">$
<thead><tr>$
<th>rank$
<th><i>v</i>_1$
<th><i>v</i>_2$
<th><i>v</i>_3$
<th><i>v</i>_4 $
<th><i>v</i>_5$
<th><i>v</i>_6$
<th><i>v</i>_7$
<tbody>$
<tr>$
<th>1$
<td><i>a</i> $
<td><i>a</i>$
<td><i>a</i> $
<td><i>c</i> $
<td><i>c</i>$
<td><i>b</i> $
<td><i>e</i> $
<tr>$
<th>2$
<td><i>b</i> $
<td><i>d</i>$
<td><i>d</i> $
<td><i>b</i> $
<td><i>d</i> $
<td><i>c</i>$
<td><i>c</i> $
<tr>$
<th>3$
<td><i>c</i> $
<td><i>b</i>$
<td><i>b</i> $
<td><i>d</i> $
<td><i>b</i>$
<td><i>d</i>$
<td><i>d</i>$
<tr>$
<th>4$
<td><i>d</i>  $
<td><i>e</i>$
<td><i>e</i>$
<td><i>e</i>$
<td><i>a</i>$
<td><i>a</i>$
<td><i>b</i>$
<tr>$
<th>5$
<td><i>e</i>$
<td><i>c</i>$
<td><i>c</i>$
<td><i>a</i>$
<td><i>e</i>$
<td><i>e</i>$
<td><i>a</i>$
</tbody>$
</table>$
<small>Source: Taylor (2005) p. 33</small></p>$
<p>The simple pairwise majority voting gives the following global preference or indifference relation on <i>A</i>:</p>$
<p><img src="socialChoice33.png"</p>$
<p>We observe a Condorcet paradox at the beginning of the simple pairwise majority voting. Indeed, <i>b</i> is preferred or indifferent to <i>d</i>, which is preferred or indifferent to <i>c</i>, which is in turn preferred or indifferent to <i>b</i>.</p>$
<p>The weighted concordance index <i>S</i> of the global preference or indifference relation is the following:</p>$
<table border="1">$
<thead><tr>$
<th><i>S</i>$
<th><i>a</i>$
<th><i>b</i>$
<th><i>c</i>$
<th><i>d</i> $
<th><i>e</i>$
<th><i>ds</i>$
<tr>$
<th><i>a</i>$
<td>1.00$
<td>0.43$
<td>0.43$
<td>0.43$
<td><b>0.71</b>$
<td><b>3.00</b>$
<tr>$
<th><i>b</i>$
<td><b>0.57</b>$
<td>1.00$
<td><b>0.57</b>$
<td>0.43$
<td><b>0.86</b>$
<td><b>3.43</b>$
<tr>$
<th><i>c</i>$
<td><b>0.57</b>$
<td>0.43$
<td>1.00$
<td><b>0.71</b>$
<td><b>0.57</b>$
<td><b>3.28</b>$
<tr>$
<th><i>d</i>$
<td><b>0.57</b>$
<td><b>0.57</b>$
<td>0.29$
<td>1.00$
<td><b>0.86</b>$
<td><b>3.29</b>$
<tr>$
<th><i>e</i>$
<td>0.29$
<td>0.14$
<td>0.43$
<td>0.14$
<td>1.00$
<td><b>2.29</b>$
<tr>$
<th><i>de</i>$
<td><b>3.00</b>$
<td><b>2.57</b>$
<td><b>2.72</b>$
<td><b>3.00</b>$
<td><b>4.00</b>$
<td><b>15.29</b>$
</tbody>$
</table>$
<p>Due to the tricycle <<i>b,c,d</i>> at the beginning of the relation <i>S</i>, the valued digraph does not support any dominant kernel. But candidate <i>e</i> is clearly ranked as worst choice.</p>$
<p>The odd circuit augmented digraph however correctly supports <i>b,c,d</i> as dominant hyperkernel.</p>$
$
<H2>Files</H2>$
<ul>$
<li><a href="socialChoice33.py">Indiviudal preferences</a> (Python data file).$
<li><a href="socialChoice33norm.py">Pairwise preference and indifference relation</a> (Python data file).$
<li><a href="socialChoice33normh1.py">Circuit augmented, pairwise preference and indifference relation,</a> (Python data file).$
<li><a href="socialChoice33result.txt">Global results</a> (Text file).$
</ul>$
<h2>References</h2>$
<ul>$
<li>Taylor, Alan D., <em>Social Choice and the Mathematics of Manipulation</em>. Cambridge University Press, 2005, [ISBN:0-521-00883-2] $
<li>Bisdorff, R., Meyer, P. and Roubens, M., <em>Revisiting the choice problem</em>. SMA working paper 05-2, University of Luxembourg, 2005 <a href="SMAWP05-02.pdf">(PDF for downloading)</a>.$
</ul>$
$
</body>$
<html>$
<head>$
<STYLE type="text/css">$
  BODY       { font-family:Verdana }$
  H1         { font-size:16pt; color:#339966 }$
  H2         { font-size:14pt; color:#AD2B2E }$
  P          { font-size:10pt }$
  P.tty { font-family:courier }$
  B.tty { font-family:courier }$
</STYLE>$
<title>Ruby Data set: Chvatal Graph</title>$
</head>$
<body>$
<h1>Ruby Data set</h1>$
<h2>Title</h2>$
<p>Chvat&aacute;l's Graph</p>$
<h2>Data type</h2>$
<p>Cris symmetric simple graphs</p>$
<h2>Problematics</h2>$
<p>Symmetric graphs, graph automorphism, unlabelled kernels, St-Nicolas graphs</p>$
<h2>Description</h2>$
<p>Gr&uuml;nbaum conjectured that for every <i>m>1</i>, <i>n</i>>2, there exists an <i>m</i>-regular, <i>m</i>-chromatic graph of girth at least <i>n</i>. This result is trivial for <i>n</i>=2 and <i>m</i>=2,3, but only two other such graphs are known: the Chv&aacute;tal graph illustrated below, and the Gr&uuml;nbaum graph.</p>$
<img src="chvatal.png" />$
$
<p>The Chv&aacute;tal graph is a quartic graph on 12 nodes and 24 edges. It has chromatic number 4, and girth 4. It supports three unlabelled kernels: 2 x 8 and 4 isomorph labelled kernels.</p>$
$
$
<H2>Files</H2>$
<ul>$
<li><a href="chvatal12-4.py">Python file</a>$
</ul>$
<h2>References</h2>$
<ul>$
<li>R. Bisdorff, <em>Exloitation en probl&eacute;matique du choix d'une relation de surclassement valu&eacute;e</em>. Communication au S&eacute;minaire du Lamsade, 11 octobre 2005. <a href="Lamsade11Oct05handouts.pdf">(PDF for dowloading)</a>.$
</ul>$
$
</body>$
<html>$
<head>$
<meta name="description" content="Entry level to the RuBy decision support methodology pages">$
<meta name="author" content="Raymond Bisdorff">$
<meta name="keywords" content="University, Decision-Aid, RuBy decision support methodology, Operational Research, Graph Theory, Random Graphs, Graph Automorphism, Kernels, Bipolar Valued Logic">$
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">$
<meta http-equiv="Content-Style-Type" content="text/css">$
<title>Ruby Data set: The Tutte-Coxeter (Levi) graph</title>$
<STYLE type="text/css">$
  BODY       { font-family:Verdana }$
  H1         { font-size:16pt; color:#339966 }$
  H2         { font-size:14pt; color:#AD2B2E }$
  P          { font-size:10pt }$
  P.tty { font-family:courier }$
  B.tty { font-family:courier }$
  B.sc  { font-variant:small-caps }$
</STYLE>$
</head>$
<body>$
<h1>Ruby Data set</h1>$
<h2>The Tutte-Coxeter (Levi) graph</h2>$
<h3>Data type</h3>$
<p>Arc-transitive (symmetric) graph</p>$
<h3>Problematics</h3>$
<p>Kernel equation system solution space symmetries, conjecture on kernel numbers, clustering</p>$
<h3>Description</h3>$
$
<p>The Tutte-Coxeter (or Levi graph) is a famous cubic graph on 30 with girth 8. It is constructed from X = {0,1, ..., 9} and its circulants {-1,1}, and {-4,4}.</p>$
<img src="tuttes8cage.png">$
$
<p>The Tutte-Coxeter graph (also called Tutte's 8-cage or Levi Graph) is a generalized polygon as it is the point/line incidence graph of a generalized quadrangle. It is a 4-arc transitive cubic graph, first discovered by Tutte (1947).</p>$
$
<p>The Tutte-Coxeter graph supports 3264 different kernels, among them obviously the set of 0-circulant (pink coloured) nodes of cardinality 10.</p> $
$
<p>The unlabelled kernel number of the Tutte-Coxeter graph is <b>15.</b></p>$
<h3>Proof</h3>$
<p>The <a href="http://cs.anu.edu.au/~bdm/nauty/">nauty</a> program, a software package for computing the automorhism group of a graph, reveals us that Tutte-Coxeter supports four automorphic actions, very similar to the Coxeter graph:$
<ol>$
<li>a bilateral reflection: (5 14)(6 24)(7 27)(8 20)(9 10)(15 19)(16 21)(18 23)(25 29)(26 28),$
<li>a bilateral reflection: (4 13)(5 23)(6 26)(7 29)(8 19)(14 18)(15 20)(17 22)(24 28)(25 27),$
<li>a bilateral reflection: (1 10)(2 15)(3 5)(6 13)(7 18)(11 20)(12 25)(16 23)(17 28)(21 27),$
<li>a synchronized central rotation of the three circulants: (0 1 2 3 4 5 6 7 8 9)(10 11 12 13 14 15 16 17 18 19)(20 21 22 23 24 25 26 27 28 29).$
</ol>$
The total order of the automorphism group generated with these actions is 1440.</p>$
<p>The four generators of the Tutte-Coxeter graph automorphism group map on the kernel equation system solution space 15 disjoint orbits with the following representatively labelled choices, in increasing cardinalities of the choice and the corresponding orbit:$
<table>$
<tr><th>#<th>Labelled choice<th>Choice cardinality<th>Orbit cardinality$
<tr><td>1<td>['2', '4', '8', '10', '13', '16', '27', '28', '29']<td>9<td> 90$
<tr><td>2<td>[ '2', '4', '8', '10', '16', '17', '19', '21', '23', '25']<td>  10<td>72$
<tr><td>3<td>['1', '4', '7', '9', '15', '16', '18', '20', '21', '22']<td>  10<td>120$
<tr><td>4<td>['4', '7', '9', '10', '11', '12', '18', '25', '26', '27']<td> 10 <td>360$
<tr><td>5<td>['1', '3', '5', '7', '10', '19', '22', '26', '27', '28']<td>  10<td> 360$
<tr><td>6<td>['2', '4', '7', '9', '15', '16', '18', '20', '21', '22']<td>  10<td>720$
<tr><td>7<td>['0', '2', '4', '6', '8', '13', '21', '25', '27', '29']<td>10 <td> 720$
<tr><td>8<td>[ '1', '3', '8', '6', '12', '15', '19', '20', '24', '26', '28']<td>  11<td> 30$
<tr><td>9<td>['0', '4', '6', '8', '12', '13', '15', '19', '20', '21', '26']<td> 11<td> 120$
<tr><td>10<td>['1', '3', '5', '7', '12', '18', '19', '20', '24', '25', '26']<td>  11<td>180$
<tr><td>11<td>['0', '2', '5', '7', '11', '18', '19', '20', '22', '24', '26']<td>  11<td>360$
<tr><td>12<td>['0', '2', '4', '7', '15', '16', '18', '19', '21', '22', '23', '27']<td>12<td>10$
<tr><td>13<td>['1', '3', '5', '7', '9', '10', '12', '16', '24', '23', '28', '29']<td>  12<td>90$
<tr><td>14<td>['0', '3', '6', '8', '11', '15', '17', '19', '20', '22', '24', '26', '28']<td>13<td> 30$
<tr><td>15<td>['0', '2', '4', '6', '8', '11', '13', '15', '17', '19', '20', '22', '24', '26', '28']<td>15<td>2$
</table>$
</p>$
<p> Some of the representative solutions listed above are shown in the next Figure.</p>$
<img src="tuttes8cageKernels.png">$
<H3>Files</H3>$
<ul>$
<li><a href="tuttes8cage.py">The Tutte-Coxeter graph(Python file format)</a>$
<li><a href="tuttes8cage.txt">All 3264 kernel solutions of the Tutte-Coxeter graph (Text file format)</a>$
</ul>$
$
<h3>References</h3>$
<ul>$
<li>Weisstein, E. W., <em>From MathWorld--A Wolfram Web Resource</em>. <a href="http://mathworld.wolfram.com/LeviGraph.html">http://mathworld.wolfram.com/LeviGraph.html</a>$
<li>Godsil, Chr. and Royle, G., <em>Algebraic Graph Theory</em>. Springer-Verlag, 2001 [ISBN 0-387-95241-1] (p. 71). $
</ul>$
$
<hr>$
<p><a href="index.html">Return to main <b class="sc">RuBy</b> index</a></p>$
<p>Responsible author: <a href="mailto://raymond.bisdorff@uni.lu">R. Bisdorff</a>, Decembre 2005</p>$
$
</body>$
</html>$
